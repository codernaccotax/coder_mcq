-- MySQL dump 10.13  Distrib 8.0.36, for Win64 (x86_64)
--
-- Host: localhost    Database: mcq2_db
-- ------------------------------------------------------
-- Server version	5.5.5-10.4.32-MariaDB

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `mcq2_db`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `mcq2_db` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci */;

USE `mcq2_db`;

--
-- Table structure for table `levels`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `levels` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `level_name` varchar(255) NOT NULL,
  `inforce` tinyint(1) NOT NULL DEFAULT 1,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_level_name` (`level_name`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `levels`
--

INSERT INTO `levels` (`id`, `level_name`, `inforce`, `created_at`, `updated_at`) VALUES (1,'Level1',1,'2024-11-22 18:29:35','2024-11-22 18:29:35'),(2,'Level2',1,'2024-11-22 18:29:35','2024-11-22 18:29:35'),(3,'Level3',1,'2024-11-22 18:29:35','2024-11-22 18:29:35'),(4,'Level4',1,'2024-11-22 18:29:35','2024-11-22 18:29:35');

--
-- Table structure for table `question_types`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `question_types` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_type_name` varchar(255) NOT NULL,
  `inforce` tinyint(1) NOT NULL DEFAULT 1,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_question_type_name` (`question_type_name`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question_types`
--

INSERT INTO `question_types` (`id`, `question_type_name`, `inforce`, `created_at`, `updated_at`) VALUES (1,'MCQ',1,'2024-11-22 18:29:35','2024-11-22 18:29:35');

--
-- Table structure for table `questions`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `questions` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary Key: Unique question ID',
  `topic_id` bigint(20) unsigned DEFAULT NULL COMMENT 'Foreign Key: References topics(id)',
  `level_id` bigint(20) unsigned DEFAULT NULL COMMENT 'Foreign Key: References levels(id)',
  `question_type_id` bigint(20) unsigned DEFAULT 1 COMMENT 'Foreign Key: References question_types(id)',
  `question` text NOT NULL COMMENT 'The text of the question',
  `option1` text NOT NULL COMMENT 'First option for the question',
  `option2` text NOT NULL COMMENT 'Second option for the question',
  `option3` text DEFAULT NULL COMMENT 'Third option for the question (optional)',
  `option4` text DEFAULT NULL COMMENT 'Fourth option for the question (optional)',
  `answer` tinyint(4) NOT NULL COMMENT 'answer of the question',
  `answer_explanation` text DEFAULT NULL COMMENT 'answer explanation (optional)',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp for soft deletion, NULL means not deleted',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_topic_id_question` (`topic_id`,`question`) USING HASH COMMENT 'Ensures unique questions per topic',
  KEY `idx_topic_level` (`topic_id`,`level_id`) COMMENT 'Composite index for topic and level filtering',
  KEY `idx_question_type` (`question_type_id`) COMMENT 'Index for filtering by question type',
  KEY `fk_level_id` (`level_id`),
  CONSTRAINT `fk_level_id` FOREIGN KEY (`level_id`) REFERENCES `levels` (`id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_question_type_id` FOREIGN KEY (`question_type_id`) REFERENCES `question_types` (`id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_topic_id` FOREIGN KEY (`topic_id`) REFERENCES `topics` (`id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=457 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Table to store questions with multiple options and metadata';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `questions`
--

INSERT INTO `questions` (`id`, `topic_id`, `level_id`, `question_type_id`, `question`, `option1`, `option2`, `option3`, `option4`, `answer`, `answer_explanation`, `created_at`, `updated_at`, `deleted_at`) VALUES (1,1,1,1,'What is an AVL tree?','A binary tree','A self-balancing binary search tree','A tree with only two levels','A tree with no leaves',2,'An AVL tree is a self-balancing binary search tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(2,1,1,1,'Who invented the AVL tree?','Adelson-Velsky and Landis','Knuth','Dijkstra','None of the above',1,'AVL trees were introduced by Adelson-Velsky and Landis.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(3,1,2,1,'What is the time complexity of AVL tree insertion in the worst case?','O(n)','O(log n)','O(n^2)','O(1)',2,'In AVL trees, insertion maintains a balance factor, ensuring logarithmic time complexity.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(4,1,1,1,'What is the balance factor in an AVL tree?','Height difference of left and right subtrees','Number of nodes in the tree','Number of edges in the tree','Difference between the number of left and right children',1,'The balance factor is calculated as the height difference between the left and right subtrees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(5,1,2,1,'What is the balance factor of a perfectly balanced AVL tree?','-1, 0, or 1','0 only','1 only','None of the above',2,'In a perfectly balanced AVL tree, the balance factor is 0 for all nodes.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(6,1,2,1,'Which rotation is used to rebalance an AVL tree after an insertion causing imbalance at a left-left case?','Left Rotation','Right Rotation','Left-Right Rotation','Right-Left Rotation',2,'A right rotation is performed to fix a left-left case in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(7,1,1,1,'Which data structure is used in AVL tree operations?','Stack','Binary Tree','Queue','Graph',2,'AVL trees are a type of binary tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(8,1,3,1,'In an AVL tree, what happens after a deletion that causes imbalance?','Perform necessary rotations to rebalance the tree','Delete more nodes until balanced','Do nothing','Rebuild the tree completely',1,'Rotations are used to maintain the AVL property after deletions.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(9,1,2,1,'What is the time complexity of searching in an AVL tree?','O(log n)','O(n)','O(n log n)','O(n^2)',1,'Searching in an AVL tree is logarithmic as it maintains balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(10,1,3,1,'What is a single rotation in AVL trees?','Rotating nodes to maintain balance','Deleting a node','Adding a node to balance','None of the above',1,'Single rotation is performed to fix imbalance caused by insertion or deletion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(11,1,2,1,'Which of the following is NOT a property of an AVL tree?','It is a binary search tree','It is balanced','It allows duplicate keys','Height difference of subtrees is at most 1',3,'AVL trees do not allow duplicate keys as they are binary search trees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(12,1,1,1,'Which operation is NOT supported in an AVL tree?','Insertion','Deletion','Search','Random access by index',4,'AVL trees do not support random access like arrays.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(13,1,3,1,'What type of rotation is performed in the left-right case of AVL tree imbalance?','Left Rotation followed by Right Rotation','Right Rotation followed by Left Rotation','Only Left Rotation','Only Right Rotation',1,'In a left-right case, a left rotation followed by a right rotation is performed.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(14,1,1,1,'What is the maximum height difference allowed between subtrees in an AVL tree?','1','2','3','Unlimited',1,'The maximum height difference between left and right subtrees in an AVL tree is 1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(15,1,2,1,'How is height calculated in an AVL tree?','The maximum depth of the node from the root','The total number of nodes in the tree','The total number of edges in the tree','The difference between left and right children',1,'Height is calculated as the maximum depth of a node from the root.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(16,1,2,1,'What happens if an AVL tree is not balanced?','Its performance degrades','It cannot perform insertions','It becomes a complete binary tree','It cannot perform deletions',1,'An unbalanced AVL tree degrades in performance to O(n) in the worst case.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(17,1,1,1,'How many types of rotations are there in AVL trees?','1','2','3','4',4,'There are four types of rotations: left, right, left-right, and right-left.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(18,1,3,1,'Which of the following applications uses AVL trees?','Databases','File systems','Memory management','All of the above',4,'AVL trees are used in databases, file systems, and memory management for efficient operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(19,1,1,1,'What is the property of AVL trees that distinguishes them from general binary search trees?','They are self-balancing','They allow duplicate values','They are always complete','They do not have a root',1,'AVL trees are self-balancing, which distinguishes them from binary search trees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(20,1,2,1,'What is the purpose of rotations in AVL trees?','To maintain the height balance','To increase the height of the tree','To decrease the tree size','To delete unnecessary nodes',1,'Rotations maintain the height balance of the tree after insertion or deletion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(21,1,2,1,'What is the minimum height of an AVL tree with 7 nodes?','2','3','4','5',2,'The minimum height of an AVL tree with 7 nodes is 3, as it must maintain balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(22,1,1,1,'Which traversal order is used to retrieve the sorted order of elements in an AVL tree?','Pre-order','In-order','Post-order','Level-order',2,'In-order traversal retrieves the elements of an AVL tree in sorted order.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(23,1,3,1,'Which node becomes the root after a right rotation?','The right child of the root','The left child of the root','The root remains unchanged','The root of the subtree',2,'The left child of the root becomes the new root after a right rotation.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(24,1,2,1,'Can an AVL tree have duplicate keys?','Yes','No','Sometimes','Depends on implementation',2,'AVL trees do not allow duplicate keys as they follow binary search tree properties.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(25,1,3,1,'What is the maximum number of rotations required for insertion in an AVL tree?','1','2','3','4',2,'At most, 2 rotations (a double rotation) are required to rebalance the tree during insertion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(26,1,3,1,'How are duplicate values handled in AVL trees?','By rejecting them','By keeping them in separate nodes','By ignoring balance factor','None of the above',1,'Duplicate values are typically rejected in AVL trees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(27,1,3,1,'Which operation in AVL trees may require multiple rotations?','Insertion','Search','Deletion','Traversal',3,'The deletion operation may require multiple rotations to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(28,1,2,1,'What is the time complexity of deletion in an AVL tree?','O(log n)','O(n)','O(1)','O(n log n)',1,'The time complexity of deletion in an AVL tree is O(log n).','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(29,1,1,1,'What determines whether a node is balanced in an AVL tree?','Balance factor between -1 and 1','Equal number of left and right children','Equal height of subtrees','Number of children nodes',1,'A node is balanced if its balance factor is between -1 and 1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(30,1,2,1,'What is the significance of a balanced binary tree like an AVL tree?','Ensures logarithmic time complexity for operations','Minimizes memory usage','Makes traversal easier','Simplifies node insertion',1,'A balanced binary tree ensures logarithmic time complexity for search, insert, and delete operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(31,1,2,1,'What is the role of the balance factor in AVL tree operations?','To determine which subtree to traverse','To detect imbalance and decide rotations','To count nodes in the subtree','To calculate tree height',2,'The balance factor is used to detect imbalance and decide which rotation to perform.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(32,1,3,1,'What is the maximum height of an AVL tree with 100 nodes?','10','15','20','30',2,'The maximum height of an AVL tree with 100 nodes is approximately 15 (logarithmic growth).','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(33,1,3,1,'Which case does a right-left rotation fix in an AVL tree?','Left-left','Left-right','Right-left','Right-right',3,'A right-left rotation is used to fix a right-left imbalance in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(34,1,2,1,'What happens when an AVL tree becomes unbalanced due to insertion?','The tree is restructured using rotations','The tree is rebuilt completely','The node is rejected','Nothing happens',1,'AVL trees perform rotations to maintain balance after an insertion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(35,1,1,1,'In which order are nodes visited during a post-order traversal of an AVL tree?','Left subtree, Right subtree, Root','Root, Left subtree, Right subtree','Right subtree, Left subtree, Root','Left subtree, Root, Right subtree',1,'In post-order traversal, nodes are visited in the order: Left subtree, Right subtree, Root.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(36,1,1,1,'What is the height of an AVL tree with no nodes?','-1','0','1','Undefined',1,'The height of an empty AVL tree is conventionally defined as -1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(37,1,3,1,'Which of the following is a correct sequence of rotations for fixing a left-right case?','Right Rotation followed by Left Rotation','Left Rotation followed by Right Rotation','Two Right Rotations','Two Left Rotations',2,'A left-right case is fixed by a left rotation on the left child, followed by a right rotation on the root.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(38,1,3,1,'Which rotation is performed when the balance factor is -2, and the right child has a balance factor of 1?','Right-Left Rotation','Left Rotation','Right Rotation','Left-Right Rotation',1,'A right-left rotation is used when the right child of an unbalanced node has a balance factor of 1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(39,1,2,1,'Which of the following traversal methods is used to verify the balance factor of every node in an AVL tree?','In-order traversal','Post-order traversal','Level-order traversal','Pre-order traversal',2,'Post-order traversal is commonly used to verify or calculate the balance factor of nodes.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(40,1,2,1,'How does an AVL tree handle skewed input data?','Rebalances using rotations','Becomes skewed itself','Rejects the input','Switches to a complete binary tree',1,'AVL trees maintain balance by performing rotations, even with skewed input data.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(41,1,2,1,'What is the advantage of AVL trees compared to unbalanced binary search trees?','Faster traversal','Guaranteed logarithmic height','Simpler implementation','Smaller memory footprint',2,'AVL trees ensure logarithmic height, improving operation performance compared to unbalanced trees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(42,1,3,1,'What is the purpose of double rotations in AVL trees?','To handle specific imbalance cases','To improve search speed','To rebalance after deletions','To prevent duplicate values',1,'Double rotations handle specific imbalance cases like left-right or right-left.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(43,1,3,1,'What is the height of an AVL tree with 31 nodes?','4','5','6','7',2,'The height of an AVL tree with 31 nodes is 5, as it follows a logarithmic pattern.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(44,1,1,1,'What does the \"A\" in AVL tree stand for?','Adelson','Advanced','Abstract','Automatic',1,'The A in AVL tree stands for Adelson, one of its inventors.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(45,1,1,1,'Which of the following is true about the structure of an AVL tree?','Every node is balanced within -1 to 1','It always has a complete binary tree structure','Every level is fully filled','It does not allow leaf nodes',1,'AVL trees are balanced with every node having a balance factor of -1, 0, or 1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(46,1,2,1,'What is the result of an in-order traversal of an AVL tree?','A reverse-sorted order','A sorted order of elements','A balanced order','An unsorted order',2,'An in-order traversal of an AVL tree produces a sorted order of elements.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(47,1,2,1,'What is the effect of a right rotation on the height of an AVL tree?','Increases the height','Decreases the height','Keeps the height unchanged','Doubles the height',2,'A right rotation generally reduces the height of the tree or subtree involved.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(48,1,1,1,'How many child nodes does an internal node of an AVL tree have at most?','1','2','3','4',2,'An internal node in an AVL tree can have at most 2 children as it is a binary tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(49,1,3,1,'What is the maximum number of rotations needed to balance an AVL tree during a single operation?','1','2','3','4',2,'A single operation in an AVL tree requires at most 2 rotations to balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(50,1,3,1,'What condition triggers a left rotation in an AVL tree?','When the balance factor is +1','When the balance factor is +2','When the balance factor is -1','When the balance factor is -2',2,'A left rotation is triggered when the balance factor becomes -2 due to an imbalance in the right subtree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(51,1,3,1,'What is the result of a left rotation on an unbalanced AVL tree?','The balance factor of the root becomes 0','The right child becomes the root of the subtree','The left child becomes the root of the subtree','The root becomes null',3,'In a left rotation, the right child of the unbalanced node becomes the root of the subtree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(52,1,3,1,'In AVL trees, what happens to the balance factor after a right rotation?','It becomes -1 or 0','It becomes 1 or 0','It becomes 0 only','It becomes undefined',2,'After a right rotation, the balance factor of the node is either -1 or 0, depending on the balance of the subtrees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(53,1,2,1,'Which of the following is true for AVL tree insertion?','It maintains the binary search tree property','It can result in an unbalanced tree','It allows duplicate elements','It requires additional memory for storing pointers',1,'During insertion, AVL trees maintain the binary search tree property, ensuring sorted order.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(54,1,2,1,'How does an AVL tree achieve efficient search operations?','By using binary search properties and maintaining balance','By using a hash table','By using linked lists','By storing data in arrays',1,'AVL trees provide efficient searches by maintaining balance and following binary search properties.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(55,1,2,1,'What is the primary disadvantage of AVL trees compared to binary search trees?','Higher memory usage for balance factors','Slower search operations','Less efficient rotations','Lack of support for dynamic data',1,'AVL trees require extra memory for balance factors, which can be considered a disadvantage compared to regular binary search trees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(56,1,2,1,'In an AVL tree, how is the balance factor of a node calculated?','Height of the left subtree minus the height of the right subtree','Number of nodes in the left subtree minus the right subtree','Difference in values of the left and right children','Sum of the left and right children values',1,'The balance factor of a node is the height difference between its left and right subtrees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(57,1,2,1,'What is the time complexity of finding the minimum value in an AVL tree?','O(log n)','O(n)','O(1)','O(n log n)',1,'The time complexity of finding the minimum value in an AVL tree is O(log n) as the tree is balanced.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(58,1,3,1,'Which of the following scenarios requires a left-right rotation?','When the left subtree of the left child of the node is too tall','When the right subtree of the right child of the node is too tall','When the root node has two children','When a node is inserted at a leaf',1,'A left-right rotation is required when the left child of a node has a right-heavy subtree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(59,1,2,1,'What happens if an AVL tree is not properly balanced during an insertion?','It may result in slower search times','It becomes a binary tree','It rejects the node','The tree stops functioning',1,'If an AVL tree is not balanced, search and other operations degrade in performance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(60,1,1,1,'Which of the following does NOT affect the balance factor of an AVL tree?','The number of nodes at the leaf level','The height difference between left and right subtrees','The number of child nodes a node has','The root node of the tree',1,'The balance factor is determined by the height difference between left and right subtrees, not the number of nodes or children.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(61,1,2,1,'What is the effect of deleting a node in an AVL tree?','It may require rotations to maintain balance','It immediately balances the tree','It always decreases the tree height','It removes the balance factor',1,'Deleting a node in an AVL tree may cause imbalance, requiring rotations to maintain balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(62,1,3,1,'Which type of rotation is required when the left subtree of the left child becomes too tall?','Left Rotation','Right Rotation','Left-Right Rotation','Right-Left Rotation',1,'A left rotation is required when the left subtree of the left child is too tall (left-left case).','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(63,1,2,1,'What happens after an AVL tree performs a left rotation?','The root node becomes the left child','The root node becomes the right child','The left child becomes the root node','The right child becomes the left child',3,'In a left rotation, the left child of the root becomes the new root of the subtree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(64,1,2,1,'Which of the following is true about AVL trees compared to red-black trees?','AVL trees are more strictly balanced','Red-black trees guarantee faster search times','AVL trees are easier to implement','Red-black trees are more space-efficient',1,'AVL trees are more strictly balanced, ensuring O(log n) time complexity for search, insert, and delete operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(65,1,2,1,'How do AVL trees improve search efficiency compared to unbalanced binary search trees?','By keeping the height of the tree logarithmic','By using hashing techniques','By storing elements in arrays','By dynamically resizing the tree',1,'AVL trees improve search efficiency by maintaining a balanced structure, ensuring logarithmic height.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(66,1,1,1,'Which of the following is NOT a common use case of AVL trees?','Database indexing','Memory management','File system management','Real-time event processing',4,'Real-time event processing is less commonly associated with AVL trees, as other structures are preferred for dynamic event handling.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(67,1,3,1,'What is the effect of performing multiple rotations on an AVL tree?','It ensures the tree is fully balanced','It makes the tree smaller','It can reduce the height of the tree','It maintains or restores balance while preserving search properties',4,'Multiple rotations restore balance while maintaining the search properties of the AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(68,1,2,1,'Which of the following is a disadvantage of AVL trees compared to simple binary search trees?','Higher time complexity for insertion and deletion','More memory required for balance factors','Less efficient searches','More difficult to implement',2,'AVL trees require extra memory for balance factors, which is a disadvantage in some cases compared to simple binary search trees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(69,1,2,1,'How do AVL trees maintain balance during insertion?','By performing rotations when the balance factor exceeds the threshold','By reordering the tree nodes','By deleting excess nodes','By ignoring the tree height',1,'AVL trees perform rotations when the balance factor of any node exceeds the threshold of -1 or 1 during insertion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(70,1,2,1,'What is the maximum number of rotations needed after a single insertion in an AVL tree?','1','2','3','4',2,'After a single insertion, at most two rotations are needed to restore balance in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(71,1,3,1,'In an AVL tree, what is the balance factor of a node after a right-right rotation?','0','1','-1','-2',1,'A right-right rotation typically results in a balance factor of 0 for the node involved.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(72,1,1,1,'Which of the following is a key property of AVL trees?','They are self-balancing','They store data in heaps','They allow duplicate values','They are unordered binary trees',1,'AVL trees are self-balancing binary search trees that maintain a balance factor for each node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(73,1,3,1,'What happens if two rotations are needed in an AVL tree?','The tree remains unbalanced','A double rotation is performed','The tree becomes a heap','The root node is deleted',2,'Two rotations are needed when there is a left-right or right-left case, resulting in a double rotation.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(74,1,3,1,'Which rotation is used to fix a left-right case in AVL trees?','Right Rotation followed by Left Rotation','Left Rotation followed by Right Rotation','Only Right Rotation','Only Left Rotation',2,'A left-right case in AVL trees is fixed by performing a left rotation on the left child followed by a right rotation on the root.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(75,1,2,1,'What is the minimum number of rotations required to balance an AVL tree during a single insertion?','0','1','2','3',2,'At most, one rotation is needed to balance an AVL tree during a single insertion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(76,1,2,1,'What does the AVL tree rotation operation aim to achieve?','Maintain the height balance','Ensure unique node values','Enhance search efficiency','Minimize node degree',1,'The primary aim of AVL tree rotations is to maintain the height balance of the tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(77,1,1,1,'Which of the following statements about AVL trees is false?','They require additional memory for balance factors','They provide logarithmic time complexity for insertions','They can store duplicate values','They are self-balancing binary search trees',3,'AVL trees do not store duplicate values as they are self-balancing binary search trees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(78,1,2,1,'Which of the following traversal methods is not efficient for balancing an AVL tree?','In-order traversal','Pre-order traversal','Post-order traversal','Level-order traversal',2,'Pre-order traversal is not efficient for balancing AVL trees as it does not consistently check the balance factor.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(79,1,2,1,'What happens when an AVL treeâ€™s balance factor exceeds the threshold during insertion?','A rotation is performed to restore balance','The node is rejected','The tree is resized','The tree is restructured',1,'When the balance factor exceeds the threshold, a rotation is performed to restore balance in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(80,1,2,1,'What is the time complexity of insertion in an AVL tree?','O(log n)','O(n)','O(1)','O(n log n)',1,'The time complexity of insertion in an AVL tree is O(log n) due to its balanced structure.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(81,1,3,1,'Which type of rotation is performed when the balance factor of a node is +2?','Left Rotation','Right Rotation','Left-Right Rotation','Right-Left Rotation',1,'A left rotation is performed when the balance factor of a node is +2.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(82,1,2,1,'What is the primary reason for using AVL trees in databases?','To maintain sorted order of records','To reduce memory usage','To simplify implementation','To optimize insertion and deletion times',4,'AVL trees are used in databases to optimize insertion, deletion, and search times by maintaining a balanced structure.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(83,1,2,1,'How does AVL tree balancing affect the efficiency of its operations?','It ensures O(log n) time complexity for operations','It decreases the tree height','It reduces memory usage','It prevents node duplication',1,'Balancing ensures O(log n) time complexity for search, insert, and delete operations in AVL trees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(84,1,3,1,'Which operation in AVL trees generally does not require rotation?','Insertion','Deletion','Search','Traversal',3,'Search in AVL trees does not usually require rotation as it only examines the balance factor if needed.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(85,1,2,1,'What is the impact of AVL tree rotations on tree height?','Rotations help maintain a logarithmic height','Rotations increase the tree height','Rotations reduce the tree height','Rotations make the tree a complete binary tree',1,'Rotations help maintain a logarithmic height in AVL trees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(86,1,2,1,'What is the advantage of AVL trees over binary search trees?','Guaranteed balanced structure','Faster search operations','Simpler implementation','Lower memory usage',1,'AVL trees provide a guaranteed balanced structure, ensuring efficient operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(87,1,3,1,'Which of the following is true about AVL tree deletion?','It can require multiple rotations to maintain balance','It always decreases the height of the tree','It does not affect tree balance','It reduces the number of nodes',1,'Deletion in AVL trees may require multiple rotations to maintain balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(88,1,3,1,'What is the height of an AVL tree with 16 nodes?','3','4','5','6',2,'An AVL tree with 16 nodes has a height of approximately 4.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(89,1,2,1,'Which of the following is true for AVL tree balancing after deletion?','Rotations are performed to rebalance the tree','The tree remains unbalanced','The balance factor is ignored','No changes are made to the tree',1,'After deletion, AVL trees perform rotations to rebalance the tree if necessary.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(90,1,2,1,'What is the primary benefit of AVL treeâ€™s self-balancing property?','Logarithmic time complexity for operations','Reducing memory usage','Faster insertion times','Simplified tree traversal',1,'The primary benefit of AVL treeâ€™s self-balancing property is achieving logarithmic time complexity for all operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(91,1,3,1,'Which rotation is used to fix a right-left case in AVL trees?','Left Rotation followed by Right Rotation','Right Rotation followed by Left Rotation','Only Left Rotation','Only Right Rotation',1,'A right-left case in AVL trees is fixed by performing a right rotation on the right child followed by a left rotation on the root.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(92,1,2,1,'What happens when an AVL tree performs multiple rotations?','The tree becomes completely balanced','It restores or maintains the balance of the tree','It increases the tree height significantly','It makes the tree a complete binary tree',2,'Multiple rotations restore or maintain the balance of an AVL tree, without increasing its height significantly.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(93,1,2,1,'How does an AVL tree achieve balance during insertion and deletion?','By performing rotations','By adjusting node values','By reorganizing nodes','By ignoring height considerations',1,'AVL trees achieve balance during insertion and deletion by performing rotations to maintain their height balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(94,1,1,1,'What is the main characteristic of a balanced AVL tree?','The height of the left and right subtrees of every node differs by at most 1','The number of nodes in each subtree is equal','All nodes in the left subtree are smaller than the root','All nodes in the right subtree are larger than the root',1,'A balanced AVL tree ensures that the height difference between the left and right subtrees of every node is at most 1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(95,1,3,1,'Which of the following is a direct result of performing a left rotation on an AVL tree?','The right child of the unbalanced node becomes the root','The left child of the unbalanced node becomes the root','The height of the tree increases by 1','The left child of the right child becomes the root',1,'In a left rotation, the right child of the unbalanced node becomes the new root of the subtree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(96,1,2,1,'In an AVL tree, what happens if the height difference between the left and right subtrees is more than 1?','The tree requires rebalancing through rotations','The tree becomes a binary search tree','The tree stops accepting new nodes','The tree will adjust itself without any interventions',1,'If the height difference exceeds 1, rotations are needed to restore the balance of the AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(97,1,2,1,'What does the balance factor of a node represent in an AVL tree?','The difference in height between the left and right subtrees of the node','The difference in number of nodes between the left and right subtrees','The sum of the node values of the left and right children','The number of rotations performed on the node',1,'The balance factor of a node in an AVL tree is the difference in height between its left and right subtrees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(98,1,3,1,'Which of the following scenarios causes a right-left rotation in an AVL tree?','When the right subtree of the left child of the node is too tall','When the left subtree of the left child of the node is too tall','When the right subtree of the right child is too tall','When the left subtree of the root is too tall',1,'A right-left rotation is needed when the right subtree of the left child is too tall.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(99,1,2,1,'What is the height balance criterion for an AVL tree?','The difference in heights of the left and right subtrees of any node must be at most 1','The height difference between any two nodes must be less than 2','The left subtree must always be taller than the right subtree','The left and right subtrees must always be of equal height',1,'In an AVL tree, the height difference between the left and right subtrees of any node must be at most 1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(100,1,2,1,'How many rotations are needed at most to balance an AVL tree after an insertion?','2','1','3','4',1,'At most two rotations are required to restore balance in an AVL tree after an insertion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(101,1,2,1,'What is the worst-case time complexity for searching an element in an AVL tree?','O(log n)','O(n)','O(n log n)','O(1)',1,'The worst-case time complexity for searching an element in an AVL tree is O(log n) due to its balanced structure.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(102,1,1,1,'Which of the following methods can be used to balance an AVL tree?','Rotations (Left and Right)','Splitting the tree into two','Using multiple trees','Reordering nodes',1,'Rotations (left and right) are used to restore balance in AVL trees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(103,1,2,1,'How does AVL tree maintain its balance after a node deletion?','By performing rotations as needed','By adjusting the values of nodes','By reorganizing the entire tree structure','By making the tree a binary tree',1,'After deletion, AVL trees maintain balance by performing rotations if needed to restore the tree height balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(104,1,3,1,'What happens if a node is deleted from an AVL tree and it causes an imbalance?','The node is reinserted','The tree is rebalanced through rotations','The height of the tree is increased','The tree stops functioning',2,'If deletion causes an imbalance, the tree is rebalanced through rotations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(105,1,2,1,'How are rotations performed in an AVL tree?','By adjusting the positions of nodes to restore balance','By swapping the root and its child nodes','By deleting nodes and reducing the tree height','By rearranging the tree into a heap structure',1,'Rotations in an AVL tree adjust the positions of nodes to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(106,1,2,1,'What does a negative balance factor indicate in an AVL tree?','The right subtree is taller than the left subtree','The left subtree is taller than the right subtree','The tree is balanced','The node is a leaf node',1,'A negative balance factor indicates that the right subtree is taller than the left subtree in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(107,1,2,1,'What is the space complexity of an AVL tree?','O(n)','O(log n)','O(1)','O(n log n)',1,'The space complexity of an AVL tree is O(n) due to the storage requirements for its nodes and balance factors.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(108,1,1,1,'Which type of tree is an AVL tree?','Self-balancing binary search tree','Heap tree','Red-black tree','Complete binary tree',1,'An AVL tree is a self-balancing binary search tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(109,1,2,1,'In an AVL tree, how is the height of a node determined?','By the height of the nodeâ€™s subtrees','By the number of nodes in the subtree','By the nodeâ€™s balance factor','By the nodeâ€™s depth in the tree',1,'The height of a node in an AVL tree is determined by the height of its subtrees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(110,1,3,1,'What happens when an AVL treeâ€™s balance factor is -2?','A right rotation is performed','A left-right rotation is performed','A left rotation is performed','No rotation is needed',1,'When the balance factor is -2, it indicates a right-heavy subtree, requiring a right rotation to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(111,1,3,1,'What is the effect of performing a left-right rotation on an AVL tree?','It balances the tree in the left-right case','It makes the tree taller','It swaps the left and right subtrees','It reduces the number of nodes in the tree',1,'A left-right rotation balances the tree in the left-right case, where the left child has a right-heavy subtree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(112,1,3,1,'In which situation would an AVL tree need to perform a right rotation followed by a left rotation?','When the tree is left-right unbalanced','When the tree is right-left unbalanced','When the tree is perfectly balanced','When a node is inserted into the root',1,'A right-left rotation is required when the tree is unbalanced in a right-left configuration.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(113,1,2,1,'How does the AVL tree perform balancing when the tree becomes unbalanced?','By performing rotations to restore balance','By restructuring the tree into a heap','By reducing the height of the tree','By removing extra nodes',1,'When the AVL tree becomes unbalanced, it restores balance by performing rotations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(114,1,2,1,'What is the worst-case scenario for tree height in an AVL tree?','O(log n)','O(n)','O(n log n)','O(1)',1,'The worst-case height of an AVL tree is O(log n), ensuring efficient operations like search and insertion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(115,1,1,1,'Which of the following is an advantage of AVL trees over other binary search trees?','Better search performance due to balancing','Faster insertions due to no balancing','Less memory usage','Easier implementation',1,'AVL trees provide better search performance due to their balancing, which ensures logarithmic time complexity.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(116,1,2,1,'What kind of rotations can be performed on an AVL tree to maintain balance?','Left and Right Rotations','Left Rotation only','Right Rotation only','Double Rotations only',1,'To maintain balance in AVL trees, both left and right rotations are used, depending on the imbalance case.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(117,1,2,1,'What does a balance factor of +1 indicate in an AVL tree?','The left subtree is taller than the right subtree','The right subtree is taller than the left subtree','The tree is balanced','The tree has only one child',1,'A balance factor of +1 indicates that the left subtree is taller than the right subtree in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(118,1,1,1,'Which of the following is a correct property of AVL trees?','They are balanced binary search trees','They allow duplicate values','They do not require rotations','They do not store node values',1,'AVL trees are balanced binary search trees, which maintain a logarithmic height by using rotations to ensure balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(119,1,3,1,'Which type of AVL tree imbalance requires a double rotation to restore balance?','Left-Right imbalance','Right-Left imbalance','Right imbalance','Left imbalance',1,'A Left-Right imbalance requires a double rotation, starting with a left rotation on the left child followed by a right rotation on the root.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(120,1,2,1,'What is the main disadvantage of using AVL trees?','Additional time complexity for rotations during insertion and deletion','They require more memory than other tree types','They are harder to implement than other binary search trees','They cannot be used in search operations',1,'The main disadvantage of AVL trees is the additional time complexity for rotations required during insertion and deletion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(121,1,2,1,'Which operation is performed after an insertion in an AVL tree if the balance factor is violated?','Rotation','Deletion','Searching','Traversal',1,'If the balance factor is violated after an insertion, a rotation is performed to restore balance in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(122,1,1,1,'What is the main difference between AVL trees and Red-Black trees?','AVL trees are more strictly balanced','Red-Black trees are always balanced','AVL trees do not use rotations','Red-Black trees do not balance their structure',1,'The main difference is that AVL trees are more strictly balanced than Red-Black trees, which allow more flexibility in balancing.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(123,1,2,1,'In an AVL tree, what is the worst-case time complexity for deletion?','O(log n)','O(n)','O(n log n)','O(1)',1,'The worst-case time complexity for deletion in an AVL tree is O(log n) due to the need for potential rotations to maintain balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(124,1,2,1,'What happens to the height of an AVL tree after an insertion?','It may increase by 1','It decreases by 1','It remains unchanged','It doubles',1,'The height of an AVL tree may increase by 1 after an insertion, and balancing operations may be necessary to maintain the height balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(125,1,2,1,'What is the primary disadvantage of an AVL tree over a binary search tree?','More complex to implement due to rotations','Slower search times','Requires additional memory','Cannot perform deletions',1,'The main disadvantage of an AVL tree is its complexity in implementation due to the need for rotations to maintain balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(126,1,2,1,'How does an AVL tree maintain efficient searching?','By ensuring the tree remains balanced','By reducing the number of nodes','By using hashing','By storing only unique values',1,'An AVL tree maintains efficient searching by ensuring the tree remains balanced, keeping its height logarithmic.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(127,1,3,1,'Which of the following operations requires rotations in an AVL tree?','Insertion and deletion','Searching','Traversal','Resizing',1,'Rotations in AVL trees are required during insertion and deletion operations to maintain balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(128,1,2,1,'In AVL trees, how is the height of a node recalculated?','By taking the maximum height of its left and right subtrees and adding 1','By counting the number of nodes in the subtree','By checking the balance factor','By calculating the depth of the node',1,'The height of a node is recalculated by taking the maximum height of its left and right subtrees and adding 1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(129,1,2,1,'How does the height of an AVL tree grow as the number of nodes increases?','Logarithmically','Linearly','Exponentially','Quadratically',1,'The height of an AVL tree grows logarithmically as the number of nodes increases, ensuring efficient operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(130,1,3,1,'What is the result of performing a right rotation on a node with a left-heavy subtree?','It balances the tree','It decreases the tree height','It increases the tree height','It unbalances the tree further',1,'Performing a right rotation on a left-heavy subtree balances the tree by reducing the height difference between the left and right subtrees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(131,1,1,1,'What type of tree structure is used to describe an AVL tree?','Binary search tree with balance property','Heap tree','Trie tree','B-tree',1,'An AVL tree is a binary search tree with a balance property that ensures the height difference between subtrees remains minimal.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(132,1,1,1,'Which of the following best describes an AVL tree?','A self-balancing binary search tree','A balanced tree with arbitrary height','A type of heap tree','A binary tree with no child nodes',1,'An AVL tree is a self-balancing binary search tree that maintains a balanced structure to ensure efficient operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(133,1,3,1,'How does a left rotation work in AVL trees?','The right child of the node becomes the new root of the subtree','The left child of the node becomes the new root','The left child of the right child becomes the new root','The root node is removed and replaced by its left child',1,'In a left rotation, the right child of the unbalanced node becomes the new root of the subtree, and the original root becomes the left child of the new root.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(134,1,2,1,'Which of the following best describes the balance factor of a node in an AVL tree?','Height of the left subtree minus the height of the right subtree','Sum of the heights of both subtrees','Height of the right subtree minus the height of the left subtree','The number of children of the node',1,'The balance factor of a node in an AVL tree is the height of the left subtree minus the height of the right subtree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(135,1,2,1,'What is the average time complexity for searching in an AVL tree?','O(log n)','O(n)','O(n log n)','O(1)',1,'The average time complexity for searching in an AVL tree is O(log n) due to its balanced structure.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(136,1,3,1,'When would a right rotation be necessary in an AVL tree?','When the left subtree of a node is taller than the right subtree','When the right subtree of a node is taller than the left subtree','When both subtrees are equally tall','When the node has only one child',1,'A right rotation is necessary when the left subtree of a node is taller than the right subtree, to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(137,1,2,1,'What happens if an AVL tree becomes unbalanced after a node deletion?','A rotation is performed to restore balance','The node is permanently removed','The balance factor is ignored','The tree is deleted',1,'If an AVL tree becomes unbalanced after a deletion, a rotation is performed to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(138,1,2,1,'What is the purpose of using AVL trees in real-time systems?','To provide fast, balanced search and update operations','To store large amounts of data efficiently','To guarantee the tree height stays fixed','To avoid the need for rotations during insertion',1,'AVL trees are used in real-time systems to provide fast, balanced search and update operations, ensuring O(log n) time complexity.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(139,1,1,1,'How does an AVL tree differ from a regular binary search tree?','An AVL tree maintains a balance factor to ensure efficient search times','An AVL tree does not allow duplicate values','An AVL tree allows more than two children per node','An AVL tree stores extra information for each node',1,'An AVL tree maintains a balance factor to ensure efficient search times, unlike regular binary search trees, which may become unbalanced.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(140,1,2,1,'What is the purpose of the balance factor in an AVL tree?','To track the height difference between left and right subtrees','To track the depth of the tree','To store the total number of nodes','To indicate the number of rotations performed',1,'The balance factor in an AVL tree tracks the height difference between the left and right subtrees, ensuring the tree remains balanced.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(141,1,3,1,'Which of the following cases would require a right rotation in an AVL tree?','When the left subtree of the node is too tall','When the right subtree of the node is too tall','When the node has no children','When the tree has too many nodes',1,'A right rotation is performed when the left subtree of a node is too tall, which would unbalance the tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(142,1,1,1,'How can an AVL tree improve performance compared to an unbalanced binary search tree?','By ensuring logarithmic height and faster search times','By reducing the number of nodes','By allowing duplicate elements','By using less memory',1,'AVL trees improve performance by maintaining a balanced structure, ensuring logarithmic height and faster search, insertion, and deletion times.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(143,1,2,1,'What happens if the AVL tree balance factor is -1?','The tree is balanced or nearly balanced','The left subtree is too tall','The right subtree is too tall','The node has too many children',1,'A balance factor of -1 means that the right subtree is one level taller than the left subtree, which is within the acceptable range for balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(144,1,2,1,'What is the time complexity of performing an insertion in an AVL tree?','O(log n)','O(n)','O(n log n)','O(1)',1,'The time complexity for insertion in an AVL tree is O(log n) because it involves searching and potentially performing rotations to maintain balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(145,1,1,1,'Which type of tree is used as a base structure for implementing AVL trees?','Binary search tree','Heap tree','Trie tree','B-tree',1,'AVL trees are a type of binary search tree that maintains balance through rotations to ensure efficient operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(146,1,3,1,'In an AVL tree, what is the consequence of performing too many rotations?','The tree becomes unbalanced','The height of the tree increases','The treeâ€™s time complexity increases','The tree may take up more memory',1,'Performing too many rotations can indicate that the tree is not balanced properly and may reduce the performance due to excessive restructuring.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(147,1,3,1,'What happens during a left rotation in an AVL tree?','The right child of the node becomes the new root','The left child of the node becomes the new root','The tree becomes unbalanced','The node is removed from the tree',1,'In a left rotation, the right child of the node becomes the new root, and the original node becomes the left child of the new root.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(148,1,1,1,'What is the maximum height difference allowed between the left and right subtrees of a node in an AVL tree?','1','2','0','3',1,'The maximum allowed height difference (balance factor) between the left and right subtrees of a node in an AVL tree is 1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(149,1,3,1,'Which rotation is performed when the AVL tree has a right-left imbalance?','Right rotation followed by left rotation','Left rotation followed by right rotation','Single left rotation','Single right rotation',1,'In a right-left imbalance, a right rotation is performed on the right child followed by a left rotation on the root node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(150,1,2,1,'What happens when an AVL tree becomes unbalanced after an insertion?','A rotation is performed to restore balance','The tree is resized','The tree is restructured entirely','The tree becomes a binary tree',1,'When an AVL tree becomes unbalanced after an insertion, a rotation is performed to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(151,1,2,1,'Which of the following is a potential advantage of AVL trees in database indexing?','They maintain balanced search trees with fast access times','They reduce the number of nodes in the tree','They do not require any rotations during insertion','They store data in linked lists',1,'AVL trees are advantageous in database indexing because they maintain balanced search trees, ensuring fast and efficient access times.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(152,1,3,1,'Which scenario in an AVL tree would require a double rotation?','Left-Right imbalance','Right-Left imbalance','Left imbalance','Right imbalance',1,'A double rotation is required in an AVL tree when there is a left-right or right-left imbalance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(153,1,2,1,'What is the balance factor of a node with equal left and right subtrees in an AVL tree?','0','1','-1','2',1,'The balance factor of a node with equal left and right subtrees in an AVL tree is 0.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(154,1,1,1,'How does an AVL tree ensure that the time complexity of search, insertion, and deletion is logarithmic?','By maintaining balance after every operation','By reducing the number of nodes','By removing the height constraint','By using hashing for search operations',1,'An AVL tree ensures logarithmic time complexity by maintaining balance after every operation, preventing the tree from becoming too tall and inefficient.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(155,1,2,1,'How do AVL trees handle deletion of nodes?','By potentially requiring rotations to restore balance','By removing nodes without any checks','By decreasing the tree height directly','By merging nodes',1,'AVL trees handle deletion by performing rotations if necessary to restore balance and ensure the tree remains efficient.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(156,1,2,1,'What is the time complexity for searching for a node in an unbalanced binary search tree?','O(n)','O(log n)','O(1)','O(n log n)',1,'In an unbalanced binary search tree, the time complexity for searching a node is O(n) because the tree may degrade into a linked list-like structure.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(157,1,1,1,'Which of the following is true about the balance factor of a node in an AVL tree?','It ranges from -1 to 1','It is always positive','It is always negative','It is never zero',1,'The balance factor of a node in an AVL tree ranges from -1 to 1, indicating the difference in heights between the left and right subtrees.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(158,1,3,1,'What is the first step when performing a left-right rotation on an AVL tree?','Left rotation on the left child of the unbalanced node','Right rotation on the unbalanced node','Left rotation on the unbalanced node','Right rotation on the left child of the unbalanced node',1,'The first step in a left-right rotation is to perform a left rotation on the left child of the unbalanced node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(159,1,1,1,'Which of the following is NOT a type of rotation used in an AVL tree?','Circular rotation','Left rotation','Right rotation','Left-right rotation',1,'Circular rotation is not a type of rotation used in an AVL tree. The common rotations are left, right, and left-right rotations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(160,1,2,1,'What is the typical use of AVL trees in systems where speed is a critical factor?','To provide balanced and efficient searching','To allow unlimited growth of data','To make insertion faster','To allow duplicate values in the tree',1,'AVL trees are used in systems where speed is critical because they provide balanced and efficient searching with O(log n) complexity.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(161,1,2,1,'How does the height of an AVL tree grow when more nodes are inserted?','Logarithmically','Linearly','Exponentially','Quadratically',1,'The height of an AVL tree grows logarithmically as more nodes are inserted, ensuring efficient time complexity for operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(162,1,2,1,'What is the maximum number of rotations required to balance an AVL tree after an insertion?','2','3','1','4',1,'At most two rotations are required to balance an AVL tree after an insertion, restoring its balance while maintaining efficient search times.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(163,1,2,1,'Which of the following best describes the insertion process in an AVL tree?','Insert the node like a binary search tree, then rebalance if needed','Insert the node directly without checking for balance','Insert the node at the root','Insert the node into a linked list',1,'In an AVL tree, the node is inserted like a binary search tree, and then the tree is rebalanced if the balance factor of any node is violated.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(164,1,3,1,'What happens during a right-right imbalance in an AVL tree?','A left rotation is performed','A right rotation is performed','A double rotation is performed','No rotation is required',1,'In a right-right imbalance, a left rotation is performed to restore balance in the AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(165,1,3,1,'In AVL trees, which type of imbalance requires a single left rotation?','Right-Right imbalance','Left-Right imbalance','Left imbalance','Right imbalance',1,'A right-right imbalance in an AVL tree requires a single left rotation to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(166,1,1,1,'What is the minimum number of nodes in an AVL tree of height 3?','4','5','6','7',1,'The minimum number of nodes in an AVL tree of height 3 is 4, which corresponds to a perfectly balanced tree with a height of 3.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(167,1,1,1,'Which of the following AVL tree rotations is considered a single rotation?','Left rotation','Left-right rotation','Right-left rotation','Double left rotation',1,'A single rotation in AVL trees can be a left rotation or a right rotation, both of which restore balance in specific cases.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(168,1,3,1,'When does a left-left imbalance occur in an AVL tree?','When the left subtree of the node is taller than the right subtree','When the right subtree of the node is taller than the left subtree','When both subtrees are equal in height','When the root node has no children',1,'A left-left imbalance occurs when the left subtree of the node is taller than the right subtree, and a right rotation is needed to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(169,1,1,1,'Which data structure is an AVL tree most similar to?','Binary search tree','B-tree','Heap','Hash table',1,'An AVL tree is most similar to a binary search tree, but with the additional constraint that it must remain balanced after every insertion and deletion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(170,1,2,1,'What is the time complexity of balancing an AVL tree after an insertion?','O(log n)','O(n)','O(1)','O(n log n)',1,'The time complexity of balancing an AVL tree after an insertion is O(log n), since it requires checking and potentially rotating a logarithmic number of nodes to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(171,1,1,1,'Which of the following is a feature of an AVL tree?','Self-balancing','Unbalanced structure','Storing data in sorted order','Supporting duplicate values',1,'An AVL tree is self-balancing, which ensures that the height difference between its left and right subtrees remains within a defined range, ensuring efficient operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(172,1,2,1,'In an AVL tree, what is the minimum balance factor of any node?','-1','0','1','2',1,'The minimum balance factor of any node in an AVL tree is -1, indicating that the right subtree is one level taller than the left subtree, which is still considered balanced.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(173,1,3,1,'In which of the following cases will AVL trees perform a double rotation?','Left-Right imbalance and Right-Left imbalance','Left imbalance','Right imbalance','When there is no imbalance',1,'Double rotations are performed in AVL trees when there is a left-right or right-left imbalance, which requires two rotations to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(174,1,1,1,'What does it mean for an AVL tree to be balanced?','The height difference between the left and right subtrees of every node is at most 1','The nodes are arranged in ascending order','The tree has a height of zero','The root node is always at the center',1,'An AVL tree is considered balanced if the height difference between the left and right subtrees of every node is at most 1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(175,1,2,1,'What is the worst-case time complexity for searching in an AVL tree?','O(log n)','O(n)','O(n log n)','O(1)',1,'The worst-case time complexity for searching in an AVL tree is O(log n), as the tree remains balanced, ensuring logarithmic search times.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(176,1,2,1,'What is the balance factor of a node with a left subtree height of 4 and a right subtree height of 3 in an AVL tree?','1','0','-1','2',1,'The balance factor of a node in an AVL tree is the height of the left subtree minus the height of the right subtree. In this case, the balance factor is 1.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(177,1,3,1,'Which AVL tree rotation is performed to fix a right-left imbalance?','Right rotation followed by left rotation','Left rotation followed by right rotation','Left rotation','Right rotation',1,'To fix a right-left imbalance in an AVL tree, a right rotation is first performed on the right child, followed by a left rotation on the root node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(178,1,2,1,'What is the height of an AVL tree with 15 nodes?','4','5','3','6',1,'An AVL tree with 15 nodes has a height of 4, since the height is logarithmic and the minimum number of nodes needed to form a tree of height 4 is 15.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(179,1,1,1,'What is the balance factor range of nodes in an AVL tree?','-1 to 1','-2 to 2','0 to 1','0 to 2',1,'The balance factor of a node in an AVL tree ranges from -1 to 1, where -1 means the right subtree is one level taller, and 1 means the left subtree is one level taller.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(180,1,2,1,'Which of the following is true about AVL trees?','They maintain balance through rotations','They allow unbalanced subtrees','They store nodes in unordered fashion','They use arrays to store nodes',1,'AVL trees maintain balance through rotations, ensuring that the tree does not become too unbalanced and preserves efficient operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(181,1,2,1,'How does an AVL tree respond to an insertion that causes an imbalance?','It performs a rotation to restore balance','It deletes the new node','It restructures the tree completely','It ignores the imbalance',1,'When an insertion causes an imbalance in an AVL tree, a rotation is performed to restore balance and ensure efficient operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(182,1,3,1,'What happens during a left-left imbalance in an AVL tree?','A right rotation is performed','A left rotation is performed','A double rotation is performed','The tree is deleted',1,'In a left-left imbalance, a right rotation is performed to restore balance in the AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(183,1,2,1,'What is the worst-case height of an AVL tree with n nodes?','O(log n)','O(n)','O(n log n)','O(1)',1,'The worst-case height of an AVL tree with n nodes is O(log n), which ensures that operations like search, insertion, and deletion remain efficient.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(184,1,2,1,'Which operation is guaranteed to maintain the balance property of an AVL tree?','Rotation','Searching','Traversal','Merging',1,'A rotation is the operation guaranteed to maintain the balance property of an AVL tree, restoring the height balance after insertion or deletion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(185,1,3,1,'In AVL trees, what happens if the balance factor is 2?','A right rotation is needed','A left rotation is needed','A double rotation is needed','The tree is deleted',1,'If the balance factor is 2, indicating a left-heavy tree, a right rotation is needed to restore balance in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(186,1,2,1,'How does an AVL tree handle the deletion of nodes that cause imbalance?','By performing rotations to restore balance','By rebalancing the entire tree','By removing nodes without any checks','By re-assigning the node positions',1,'When an AVL tree becomes unbalanced after a node deletion, rotations are performed to restore balance and ensure efficient operation.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(187,1,2,1,'What does a balance factor of 0 indicate in an AVL tree?','The left and right subtrees have equal height','The left subtree is taller than the right subtree','The right subtree is taller than the left subtree','The node has no children',1,'A balance factor of 0 in an AVL tree indicates that the left and right subtrees have equal height, meaning the tree is balanced at that node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(188,1,2,1,'What is the height of a perfectly balanced AVL tree with 7 nodes?','2','3','4','5',1,'The height of a perfectly balanced AVL tree with 7 nodes is 2, as the tree will be balanced at every level to ensure efficient operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(189,1,1,1,'How does an AVL tree differ from a red-black tree in terms of balancing?','AVL trees are more strictly balanced','Red-black trees are always balanced','AVL trees allow greater imbalances','Red-black trees do not use rotations',1,'AVL trees are more strictly balanced compared to red-black trees, which have more relaxed balancing criteria to ensure faster insertion and deletion times.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(190,1,2,1,'What is the best-case time complexity for searching in an AVL tree?','O(log n)','O(n)','O(n log n)','O(1)',1,'The best-case time complexity for searching in an AVL tree is O(log n), as the tree is always balanced, ensuring efficient search times.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(191,1,1,1,'What is the effect of an AVL tree rotation on the structure of the tree?','It restores balance by adjusting node positions','It removes nodes from the tree','It increases the height of the tree','It reduces the number of nodes in the tree',1,'An AVL tree rotation restores balance by adjusting the positions of the nodes to maintain the balance factor condition.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(192,1,2,1,'How do AVL trees handle duplicate values?','They do not allow duplicate values','They allow duplicates but require special balancing','They store duplicates in a separate tree','They handle duplicates by sorting them differently',1,'AVL trees generally do not allow duplicate values, as they are structured to maintain a unique order for efficient searching.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(193,1,2,1,'What is the height of an AVL tree with 10 nodes, assuming it is perfectly balanced?','3','4','2','5',1,'The height of an AVL tree with 10 nodes, when perfectly balanced, is 3, as it maintains a logarithmic structure.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(194,1,3,1,'What is the main disadvantage of AVL trees compared to other tree structures like Red-Black Trees?','They require more rotations to maintain balance','They use more memory per node','They are not suitable for large datasets','They allow only small trees',1,'The main disadvantage of AVL trees is that they require more rotations to maintain balance compared to Red-Black Trees, which can lead to higher overhead during insertion and deletion operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(195,1,3,1,'How many rotations are required to fix an imbalance in a perfectly balanced AVL tree?','0','1','2','3',1,'In a perfectly balanced AVL tree, no rotations are required, as the tree is already balanced.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(196,1,3,1,'In which case would a left-right rotation be performed in an AVL tree?','When there is a left-heavy node with a right-heavy child','When there is a right-heavy node with a left-heavy child','When the tree is completely unbalanced','When a new node is added to the right of the root',1,'A left-right rotation is performed when a left-heavy node has a right-heavy child, restoring balance to the AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(197,1,1,1,'Which of the following is NOT an AVL tree balancing operation?','Zig-zag rotation','Left rotation','Right rotation','Double rotation',1,'Zig-zag rotation is not a term used for AVL tree balancing operations. The correct balancing operations are left, right, and double rotations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(198,1,2,1,'What happens when the balance factor of a node in an AVL tree becomes greater than 1?','A left rotation is performed to restore balance','The tree becomes unbalanced','A right rotation is performed to restore balance','The node is removed from the tree',1,'When the balance factor becomes greater than 1, a left rotation is performed to restore balance to the tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(199,1,2,1,'What is the primary advantage of using an AVL tree over a standard binary search tree?','It ensures logarithmic height, improving search efficiency','It stores data in sorted order automatically','It allows faster insertion without balancing','It is easier to implement',1,'The primary advantage of an AVL tree is that it ensures logarithmic height, which improves search efficiency by preventing the tree from becoming too tall.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(200,1,2,1,'What is the worst-case time complexity for insertion into an AVL tree?','O(log n)','O(n)','O(1)','O(n log n)',1,'The worst-case time complexity for insertion into an AVL tree is O(log n), as it may require balancing through rotations but the tree height remains logarithmic.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(201,1,3,1,'Which scenario would result in an AVL tree performing a left-left rotation?','When the left subtree of a node is too tall compared to the right subtree','When the right subtree of a node is too tall compared to the left subtree','When a node has two children','When the tree has more than 10 nodes',1,'A left-left rotation is performed when the left subtree of a node is too tall compared to the right subtree, requiring a right rotation to balance it.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(202,1,1,1,'How does the time complexity of search in an AVL tree compare to an unbalanced binary search tree?','O(log n) vs O(n)','O(n) vs O(log n)','O(log n) vs O(n log n)','O(1) vs O(log n)',1,'The time complexity for search in an AVL tree is O(log n), while in an unbalanced binary search tree it is O(n) due to the potential for the tree to degenerate into a list.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(203,1,3,1,'What type of imbalance does a double rotation fix in an AVL tree?','Left-Right and Right-Left imbalances','Left-Left imbalance','Right-Right imbalance','Single rotations only',1,'Double rotations are used to fix left-right and right-left imbalances in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(204,1,1,1,'How does an AVL tree compare to a B-tree in terms of balancing?','AVL trees are more strictly balanced, while B-trees allow more flexibility','Both trees are equally balanced','B-trees are more strictly balanced than AVL trees','AVL trees allow more flexibility in balancing',1,'AVL trees are more strictly balanced compared to B-trees, which allow more flexibility in the balancing of their nodes and structure.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(205,1,2,1,'Which is true about the structure of an AVL tree after performing a right rotation?','The left child becomes the root of the subtree','The right child becomes the root of the subtree','The tree becomes a binary heap','The tree loses some of its nodes',1,'After performing a right rotation, the left child of the node becomes the new root of the subtree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(206,1,2,1,'What effect does an AVL tree rotation have on the height of the tree?','It may change the height of the subtree but not the overall tree height significantly','It increases the overall height of the tree','It decreases the overall height of the tree','It has no effect on the tree height',1,'An AVL tree rotation may change the height of the subtree involved but does not significantly change the overall height of the tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(207,1,3,1,'Which of the following is true about an AVL tree after a left-right rotation?','It restores balance to the left-heavy subtree','It restores balance to the right-heavy subtree','It becomes unbalanced','It reduces the number of nodes',1,'A left-right rotation restores balance to a left-heavy subtree by first performing a left rotation on the left child, followed by a right rotation on the root node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(208,1,2,1,'Which of the following operations is O(log n) in an AVL tree?','Search','Insertion','Deletion','All of the above',1,'All of the above operations (search, insertion, and deletion) are O(log n) in an AVL tree, as it maintains balance after each operation.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(209,1,3,1,'What happens when the balance factor of a node in an AVL tree becomes -2?','A right rotation is performed to restore balance','The tree is deleted','The node is rebalanced automatically','A double rotation is performed',1,'When the balance factor of a node in an AVL tree becomes -2, indicating a right-heavy imbalance, a right rotation is performed to restore balance to the tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(210,1,2,1,'How many times must rotations be performed to rebalance a node after a single insertion in an AVL tree?','At most 2','At most 3','At most 4','Only 1 rotation is required',1,'After a single insertion, at most 2 rotations are needed to rebalance an AVL tree and restore its balance property.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(211,1,1,1,'Which of the following is NOT a characteristic of AVL trees?','Allowing duplicate values','Balanced structure','Logarithmic search time complexity','Strict balancing criteria after each operation',1,'AVL trees do not allow duplicate values, which is a key characteristic of maintaining efficient operations and search times.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(212,1,3,1,'Which of the following is true about an AVL tree after a right-left rotation?','It restores balance to the right-heavy subtree','It causes further imbalance','It eliminates the need for rotations','It only affects one node',1,'A right-left rotation restores balance to a right-heavy subtree by first performing a right rotation on the right child, followed by a left rotation on the root node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(213,1,3,1,'What is the minimum number of rotations needed to restore balance to an AVL tree with a right-left imbalance?','2','3','1','0',1,'A right-left imbalance requires two rotations: a right rotation on the right child followed by a left rotation on the root node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(214,1,2,1,'What is the primary disadvantage of AVL trees compared to Red-Black trees?','They require more rotations for balancing','They are more memory-intensive','They are slower for large datasets','They do not support balanced insertions',1,'The primary disadvantage of AVL trees is that they require more rotations to maintain balance compared to Red-Black trees, leading to higher overhead during insertions and deletions.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(215,1,2,1,'Which operation in an AVL tree is most likely to trigger a rotation?','Insertion','Traversal','Searching','Deletion without imbalance',1,'Insertion is the operation most likely to trigger a rotation in an AVL tree, especially if the tree becomes unbalanced after adding a node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(216,1,2,1,'What is the balance factor of a node in an AVL tree if the left subtree has height 4 and the right subtree has height 2?','2','1','0','-2',1,'The balance factor of a node is the height of the left subtree minus the height of the right subtree. In this case, the balance factor is 2.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(217,1,1,1,'What happens when an AVL tree undergoes a right rotation?','The left child of the node becomes the new root of the subtree','The right child of the node becomes the new root of the subtree','The tree is split into two','The node is removed from the tree',1,'A right rotation in an AVL tree makes the left child the new root of the subtree, helping restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(218,1,3,1,'Which AVL tree operation restores the balance after a left-right imbalance?','Left rotation followed by right rotation','Right rotation followed by left rotation','Single left rotation','Single right rotation',1,'A left-right imbalance is fixed with a left rotation on the left child, followed by a right rotation on the root node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(219,1,1,1,'How do AVL trees differ from Splay trees in terms of balancing?','AVL trees are strictly balanced, while Splay trees are not strictly balanced but self-adjusting','Splay trees are more strictly balanced','AVL trees do not perform rotations','Splay trees allow duplicate nodes',1,'AVL trees are strictly balanced, ensuring logarithmic height, while Splay trees adjust based on access patterns but do not guarantee strict balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(220,1,2,1,'Which is the worst-case height of an AVL tree with n nodes?','O(log n)','O(n)','O(n log n)','O(1)',1,'The worst-case height of an AVL tree with n nodes is O(log n), as the tree is balanced to maintain logarithmic height for efficient operations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(221,1,2,1,'How do AVL trees handle balancing when nodes are deleted?','By performing rotations as needed to restore balance','By ignoring the balance factor','By shrinking the height of the tree','By removing the unbalanced nodes',1,'When nodes are deleted from an AVL tree, rotations are performed as needed to restore balance to the tree after the deletion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(222,1,2,1,'In an AVL tree, if a node has a balance factor of -1, what does this indicate about the tree structure?','The right subtree is taller by one level than the left subtree','The left subtree is taller by one level than the right subtree','The subtrees have equal heights','The node has no children',1,'A balance factor of -1 indicates that the right subtree is one level taller than the left subtree, which is still considered balanced in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(223,1,3,1,'Which type of imbalance occurs when a node has a right-heavy child that also has a left-heavy child in an AVL tree?','Right-left imbalance','Left-left imbalance','Right-right imbalance','Left-right imbalance',1,'A right-left imbalance occurs when a right-heavy node has a left-heavy child. This requires a right rotation on the right child followed by a left rotation on the root node.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(224,1,1,1,'How does an AVL tree ensure efficient search operations?','By maintaining a balanced structure with logarithmic height','By sorting the elements in the tree','By allowing fast traversal','By reducing the number of nodes in the tree',1,'An AVL tree ensures efficient search operations by maintaining a balanced structure, which keeps the height logarithmic relative to the number of nodes.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(225,1,1,1,'Which of the following operations on an AVL tree does NOT require a rotation?','Search','Insertion','Deletion','Balancing the tree after insertion',1,'A search operation in an AVL tree does not require a rotation, as it simply traverses the tree to find a node. Insertion and deletion may trigger rotations to maintain balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(226,1,2,1,'What is the height of an AVL tree with a single node?','0','1','2','3',1,'The height of an AVL tree with a single node is 0, as there are no children and the height is defined as the number of edges on the longest path from the node to a leaf.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(227,1,3,1,'Which AVL tree rotation is used to restore balance after a left-left imbalance?','Right rotation','Left rotation','Double rotation','No rotation needed',1,'A right rotation is used to restore balance in the case of a left-left imbalance in an AVL tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(228,1,2,1,'In an AVL tree, what is the balance factor of a node with a left subtree height of 5 and a right subtree height of 3?','2','1','0','-1',1,'The balance factor of a node in an AVL tree is calculated by subtracting the right subtree height from the left subtree height. In this case, the balance factor is 2.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(229,1,2,1,'What happens to the height of an AVL tree after a successful left rotation?','The height of the left subtree decreases by 1','The height of the right subtree decreases by 1','The height of the tree increases by 1','The height remains unchanged',1,'After a successful left rotation, the height of the left subtree decreases by 1 as the node is rotated to the right, and the tree is rebalanced.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(230,1,2,1,'How many nodes can an AVL tree of height 5 have in the worst case?','31','63','16','32',1,'In the worst case, an AVL tree of height 5 can have up to 31 nodes, as it follows a balanced structure ensuring efficient operations and minimal height.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(231,1,1,1,'Which of the following types of tree structures can AVL trees be compared to when considering balancing?','Binary search trees','Red-Black trees','B-trees','Heaps',1,'AVL trees are most commonly compared to binary search trees as they both maintain a sorted structure, but AVL trees enforce stricter balancing constraints.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(232,1,2,1,'What operation is generally more expensive in AVL trees compared to Red-Black trees?','Insertions and deletions','Searching for nodes','Balancing after search','Traversal of nodes',1,'Insertions and deletions in AVL trees are generally more expensive compared to Red-Black trees due to the need for more frequent rotations.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(233,1,2,1,'In an AVL tree, when does a left rotation occur?','When the left subtree is taller than the right subtree by 2 levels','When the right subtree is taller than the left subtree','When both subtrees are equal','When the tree becomes unbalanced during search',1,'A left rotation occurs in an AVL tree when the left subtree is taller than the right subtree by 2 levels, requiring a rotation to restore balance.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(234,1,2,1,'What happens to the balance factor of a node in an AVL tree after a right rotation?','The balance factor becomes zero or one','The balance factor becomes negative','The balance factor becomes larger','The balance factor does not change',1,'After a right rotation, the balance factor of the node generally becomes zero or one, restoring balance to the tree.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(235,1,1,1,'How is an AVL treeâ€™s performance measured in terms of its operations?','By the number of rotations required to maintain balance','By the number of nodes in the tree','By the height of the tree only','By the number of search queries answered',1,'An AVL treeâ€™s performance is often measured by the number of rotations required to maintain balance and its overall height, ensuring efficient operations like search, insertion, and deletion.','2024-11-22 18:29:35','2024-11-22 18:29:35',NULL),(236,2,1,1,'What is the time complexity of searching in a Binary Search Tree in the average case?','O(log n)','O(n)','O(1)','O(n^2)',1,'In a balanced BST, the time complexity for searching is O(log n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(237,2,1,1,'What property distinguishes a Binary Search Tree from other binary trees?','All nodes have 2 children','Left subtree contains nodes with values less than root','It has a single root','Nodes are connected in order of insertion',2,'In a BST, the left subtree contains nodes with values less than the root, and the right subtree contains nodes with values greater than the root.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(238,2,2,1,'What is the worst-case time complexity for inserting an element in an unbalanced Binary Search Tree?','O(log n)','O(n)','O(1)','O(n^2)',2,'In an unbalanced BST, the worst-case insertion time is O(n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(239,2,1,1,'Which traversal is used to get the elements of a Binary Search Tree in sorted order?','Pre-order','In-order','Post-order','Level-order',2,'In-order traversal of a BST yields sorted order of elements.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(240,2,2,1,'What is the height of a perfectly balanced Binary Search Tree with 15 nodes?','3','4','5','6',2,'A perfectly balanced BST with n nodes has a height of log2(n+1)-1. For 15 nodes, height = log2(16)-1 = 4.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(241,2,1,1,'Which of the following is not a valid operation on a Binary Search Tree?','Insertion','Searching','Sorting','Traversal',3,'Sorting is not an operation of a BST but a consequence of its in-order traversal.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(242,2,2,1,'What happens when a duplicate value is inserted into a Binary Search Tree?','It is added to the left subtree','It is ignored','It causes an error','It is added to the right subtree',2,'Duplicate values are typically ignored in a BST implementation.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(243,2,3,1,'Which condition violates the Binary Search Tree property?','Left subtree has smaller values than root','Right subtree has greater values than root','Both subtrees have equal values','A node in the left subtree has a greater value than the root',4,'A node in the left subtree having a value greater than the root violates the BST property.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(244,2,2,1,'What is the time complexity of deleting an element in a balanced Binary Search Tree?','O(log n)','O(n)','O(1)','O(n^2)',1,'Deletion in a balanced BST has time complexity of O(log n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(245,2,2,1,'Which traversal method is used to clone a Binary Search Tree?','Pre-order traversal','In-order traversal','Post-order traversal','Level-order traversal',1,'Pre-order traversal is used to clone a BST as it ensures that nodes are created in the same order as the original tree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(246,2,2,1,'What is the result of performing an in-order traversal on a Binary Search Tree containing the elements [50, 30, 70, 20, 40, 60, 80]?','[50, 30, 70, 20, 40, 60, 80]','[20, 30, 40, 50, 60, 70, 80]','[80, 70, 60, 50, 40, 30, 20]','[50, 40, 30, 20, 60, 70, 80]',2,'In-order traversal of a BST gives the sorted order of elements.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(247,2,2,1,'Which operation may require re-balancing in a self-balancing Binary Search Tree?','Traversal','Insertion','Searching','Both insertion and deletion',4,'Both insertion and deletion may require re-balancing to maintain the height of a self-balancing BST.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(248,2,1,1,'What is the key characteristic of a balanced Binary Search Tree?','The height difference between left and right subtrees is at most 1','It has the same number of nodes in both subtrees','All leaf nodes are at the same level','Nodes are inserted in sorted order',1,'A balanced BST ensures that the height difference between subtrees of any node is at most 1.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(249,2,2,1,'What is the minimum height of a Binary Search Tree containing 31 nodes?','4','5','6','7',2,'The minimum height of a BST with n nodes is log2(n+1)-1. For 31 nodes, height = log2(32)-1 = 5.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(250,2,1,1,'In a Binary Search Tree, where would the smallest value be located?','Root node','Leftmost node','Rightmost node','Any leaf node',2,'The smallest value in a BST is always located in the leftmost node.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(251,2,3,1,'What is the relationship between a Binary Search Tree and binary heap?','Both are binary trees','BST is ordered, but binary heap is partially ordered','BST uses height-balancing while heap does not','Both maintain node value properties',2,'A BST has an ordering property, while a binary heap is only partially ordered.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(252,2,1,1,'What is the best-case time complexity of searching in a Binary Search Tree?','O(1)','O(log n)','O(n)','O(n^2)',1,'In the best case, the search is performed directly at the root, resulting in O(1).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(253,2,2,1,'Which algorithm is most suitable for finding the kth smallest element in a Binary Search Tree?','In-order traversal','Pre-order traversal','Post-order traversal','Binary search on keys',1,'In-order traversal of a BST provides elements in sorted order, allowing us to locate the kth smallest element.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(254,2,3,1,'Which of the following is not true for a Binary Search Tree?','A BST can have duplicate values','Insertion maintains the BST property','Searching is efficient in a balanced BST','A BST can be used for sorting',1,'Typically, a BST does not allow duplicate values to maintain its structural properties.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(255,2,2,1,'What is the key difference between AVL trees and regular Binary Search Trees?','AVL trees allow duplicates','AVL trees maintain height balance','AVL trees are binary heaps','AVL trees use hashing',2,'AVL trees are self-balancing Binary Search Trees that maintain height balance.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(256,2,3,1,'How many distinct Binary Search Trees can be constructed with 3 unique keys?','3','4','5','Catalan number for n = 3',4,'The number of distinct BSTs for n unique keys is given by the nth Catalan number. For n = 3, it is 5.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(257,2,2,1,'Which data structure can efficiently maintain a sorted list of elements?','Hash table','Binary Search Tree','Stack','Queue',2,'A Binary Search Tree maintains elements in sorted order with efficient insertions and deletions.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(258,2,1,1,'Which of the following is true about the root of a Binary Search Tree?','It is always the largest element','It is always the smallest element','It may have one or no children','Its value is greater than all values in the left subtree and smaller than all values in the right subtree',4,'The root of a BST maintains the property that its value is greater than left subtree values and smaller than right subtree values.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(259,2,3,1,'What is the maximum height of a Binary Search Tree with 7 nodes?','2','3','6','7',3,'The maximum height occurs when the tree is completely unbalanced, such as a linked list, resulting in a height of 6 for 7 nodes.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(260,2,2,1,'What is the advantage of a self-balancing Binary Search Tree over a regular Binary Search Tree?','Smaller memory usage','Guaranteed O(log n) height','Simpler implementation','Faster traversal',2,'Self-balancing BSTs maintain O(log n) height, ensuring efficient operations.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(261,2,1,1,'Which of the following is an example of a self-balancing Binary Search Tree?','Red-Black Tree','Heap','Trie','Graph',1,'A Red-Black Tree is a self-balancing Binary Search Tree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(262,2,2,1,'What does the successor of a node in a Binary Search Tree represent?','The node with the smallest key greater than the given node','The root node','The parent of the given node','The leftmost node',1,'The successor of a node in a BST is the node with the smallest key greater than the given node.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(263,2,2,1,'What does the predecessor of a node in a Binary Search Tree represent?','The largest key smaller than the given node','The root node','The child of the given node','The rightmost node',1,'The predecessor is the node with the largest key smaller than the given node.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(264,2,1,1,'What is a Binary Search Tree?','A tree with nodes having at most 2 children','A tree with sorted data','A tree where every left child is smaller than its parent','All of the above',4,'A Binary Search Tree satisfies all these properties.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(265,2,1,1,'Which traversal results in sorted data from a Binary Search Tree?','In-order traversal','Pre-order traversal','Post-order traversal','Level-order traversal',1,'In-order traversal gives sorted order in a BST.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(266,2,1,1,'What is the time complexity of searching in a perfectly balanced Binary Search Tree?','O(log n)','O(n)','O(1)','O(n^2)',1,'In a balanced BST, the time complexity is O(log n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(267,2,1,1,'What is the leftmost node in a Binary Search Tree?','The smallest element','The largest element','The root','A random element',1,'The leftmost node in a BST contains the smallest value.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(268,2,1,1,'What happens if you insert a duplicate value into a Binary Search Tree?','It is ignored','It is stored in the right subtree','It is stored in the left subtree','It replaces the root',1,'Most BST implementations ignore duplicate values.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(269,2,1,1,'What is the height of a Binary Search Tree with only one node?','0','1','2','Undefined',2,'The height of a tree with a single node is defined as 1.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(270,2,1,1,'Which traversal method processes the root node first?','Pre-order traversal','In-order traversal','Post-order traversal','Level-order traversal',1,'Pre-order traversal visits the root node first.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(271,2,1,1,'What is the structure of a Binary Search Tree if elements are inserted in sorted order?','Balanced tree','Skewed tree','Heap structure','Random tree',2,'Inserting sorted elements creates a skewed tree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(272,2,1,1,'What is the average case time complexity of insertion in a Binary Search Tree?','O(log n)','O(n)','O(1)','O(n^2)',1,'In a balanced BST, the average case time complexity for insertion is O(log n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(273,2,1,1,'What is the primary purpose of a Binary Search Tree?','To store unordered data','To store sorted data','To perform arithmetic operations','To store graphs',2,'BSTs are used to store and retrieve data in sorted order.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(274,2,2,1,'What is the successor of a node in a Binary Search Tree?','The smallest key greater than the given node','The largest key smaller than the given node','The parent node','The root node',1,'The successor is the smallest key greater than the given node.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(275,2,2,1,'What is the predecessor of a node in a Binary Search Tree?','The largest key smaller than the given node','The smallest key greater than the given node','The root node','The parent node',1,'The predecessor is the largest key smaller than the given node.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(276,2,2,1,'What is the height of a Binary Search Tree with 15 nodes in the best case?','3','4','5','6',2,'In a perfectly balanced BST, the height is log2(n+1)-1. For 15 nodes, it is 4.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(277,2,2,1,'Which traversal is used to print the elements of a BST in descending order?','In-order traversal (left-right-root)','In-order traversal (right-left-root)','Pre-order traversal','Post-order traversal',2,'Performing in-order traversal in reverse order gives elements in descending order.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(278,2,2,1,'What is the time complexity of deleting a node in a balanced Binary Search Tree?','O(log n)','O(n)','O(1)','O(n^2)',1,'In a balanced BST, deleting a node has a time complexity of O(log n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(279,2,2,1,'What is the property of the left subtree in a Binary Search Tree?','It contains keys greater than the root','It contains keys smaller than the root','It contains duplicate keys','It contains the maximum element',2,'In a BST, the left subtree contains keys smaller than the root.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(280,2,2,1,'What is the property of the right subtree in a Binary Search Tree?','It contains keys greater than the root','It contains keys smaller than the root','It contains duplicate keys','It contains the minimum element',1,'In a BST, the right subtree contains keys greater than the root.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(281,2,2,1,'Which of the following is true for a balanced Binary Search Tree?','It has the smallest height possible for its nodes','It has nodes only on one side','It always has a complete structure','Its leaf nodes are at the same level',1,'A balanced BST ensures minimal height for efficient operations.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(282,2,2,1,'How many distinct Binary Search Trees can be formed with 3 unique keys?','3','4','5','6',3,'The number of distinct BSTs for n unique keys is the nth Catalan number. For n=3, it is 5.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(283,2,2,1,'What is the primary advantage of a balanced Binary Search Tree over an unbalanced one?','Faster traversal','Faster insertion and deletion','Guaranteed O(log n) height','More storage space',3,'Balanced BSTs maintain O(log n) height for efficient operations.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(284,2,3,1,'How many rotations are required to balance an AVL tree after insertion?','1','2','3','Depends on the imbalance',4,'The number of rotations depends on the imbalance type (single or double rotation).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(285,2,3,1,'What is the main difference between AVL trees and regular Binary Search Trees?','AVL trees maintain balance','AVL trees allow duplicates','AVL trees are faster','AVL trees have larger memory requirements',1,'AVL trees are self-balancing BSTs that maintain height balance.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(286,2,3,1,'Which of the following is a self-balancing Binary Search Tree?','Red-Black Tree','Heap','Trie','Graph',1,'Red-Black Trees are self-balancing Binary Search Trees.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(287,2,3,1,'What is the height of an AVL tree with 7 nodes?','2','3','4','5',2,'In an AVL tree, the height is minimized and logarithmic with respect to the number of nodes.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(288,2,3,1,'Which traversal is used to find the kth smallest element in a Binary Search Tree?','In-order traversal','Pre-order traversal','Post-order traversal','Level-order traversal',1,'In-order traversal gives elements in sorted order, allowing us to locate the kth smallest element.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(289,2,3,1,'What is the difference between an AVL tree and a Red-Black tree?','AVL trees allow duplicate values','Red-Black trees are less strictly balanced','AVL trees are faster for insertions','Red-Black trees use more memory',2,'Red-Black trees maintain balance with less strict height constraints compared to AVL trees.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(290,2,3,1,'Which rotation is applied in an AVL tree for a left-heavy imbalance at the root?','Right Rotation','Left Rotation','Left-Right Rotation','Right-Left Rotation',1,'A single Right Rotation is performed to balance a left-heavy AVL tree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(291,2,3,1,'Which traversal method can be used to convert a BST into a sorted doubly linked list?','In-order traversal','Pre-order traversal','Post-order traversal','Level-order traversal',1,'In-order traversal processes nodes in sorted order, suitable for conversion to a doubly linked list.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(292,2,3,1,'How many distinct Binary Search Trees can be formed with 5 unique keys?','28','42','16','120',2,'The number of distinct BSTs for n unique keys is the nth Catalan number. For n=5, it is 42.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(293,2,3,1,'Which of the following statements is true about splay trees?','They are self-balancing BSTs','They maintain recently accessed elements closer to the root','They guarantee O(log n) operations','They require extra space for balancing',2,'Splay trees are a type of BST that prioritize recently accessed elements near the root.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(294,2,3,1,'What is the time complexity of finding the kth smallest element in a BST?','O(n)','O(k)','O(log n)','O(1)',3,'Finding the kth smallest element involves in-order traversal, which in a balanced tree has O(log n) complexity.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(295,2,3,1,'What is the height of a Red-Black tree with n nodes in the worst case?','O(log n)','O(n)','O(âˆšn)','O(1)',1,'Red-Black trees guarantee a height of O(log n) in the worst case.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(296,2,3,1,'Which of the following is NOT true about Binary Search Trees?','Left subtree contains smaller elements','Right subtree contains larger elements','BST can have duplicate keys','BST operations are O(log n) in average cases',3,'Most BST implementations do not allow duplicate keys.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(297,2,3,1,'How can you determine if a given tree is a Binary Search Tree?','Check if in-order traversal is sorted','Check if pre-order traversal is sorted','Check if post-order traversal is sorted','Check if level-order traversal is sorted',1,'If the in-order traversal of a tree is sorted, it is a Binary Search Tree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(298,2,3,1,'How does a Red-Black tree ensure balance during insertion?','By adjusting colors and performing rotations','By always keeping the root black','By adding extra nodes','By maintaining a strict height',1,'Red-Black trees adjust node colors and perform rotations to maintain balance after insertion.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(299,2,4,1,'What is the amortized time complexity of operations in a splay tree?','O(n)','O(log n)','O(1)','O(k)',2,'Splay trees have an amortized time complexity of O(log n) for operations.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(300,2,4,1,'How can you merge two Binary Search Trees?','Perform in-order traversal, merge the arrays, and build a new BST','Insert elements of one tree into the other','Perform pre-order traversal of both and combine','It is not possible to merge BSTs',1,'Merge the in-order traversal arrays and build a new BST to maintain properties.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(301,2,4,1,'What is the minimum number of nodes required to create a height-4 AVL tree?','15','20','19','16',3,'The minimum nodes in an AVL tree of height h can be determined using a recursive formula, for height 4, it is 19.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(302,2,4,1,'What is the complexity of converting a Binary Search Tree to a balanced Binary Search Tree?','O(n)','O(log n)','O(n log n)','O(n^2)',1,'The process involves in-order traversal and rebuilding, which is O(n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(303,2,4,1,'Which algorithm is used to construct an optimal Binary Search Tree from sorted frequencies?','Huffman Coding','Dynamic Programming','Divide and Conquer','Greedy Algorithm',2,'Dynamic programming is used to construct an optimal BST given sorted frequencies.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(304,2,4,1,'What is the purpose of lazy propagation in AVL trees?','To delay updates','To balance the tree efficiently','To save memory','AVL trees do not use lazy propagation',4,'Lazy propagation is not used in AVL trees it is used in segment trees.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(305,2,4,1,'What is the expected height of a randomly built Binary Search Tree with n nodes?','O(log n)','O(âˆšn)','O(n)','O(n log n)',2,'A randomly built BST is expected to have a height of O(âˆšn).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(306,2,4,1,'How can you verify if two Binary Search Trees are identical?','Check pre-order, in-order, and post-order traversals','Compare their structures and elements recursively','Check if they have the same root','They cannot be verified',2,'Identical BSTs have the same structure and the same elements at corresponding positions.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(307,2,4,1,'What happens when a key is deleted from a Red-Black Tree?','The tree is rebalanced using rotations and color changes','The key is ignored','The tree becomes unbalanced','Nothing happens',1,'Red-Black Trees ensure balance after deletion by using rotations and color adjustments.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(308,2,4,1,'What is the most efficient way to find the median in a Binary Search Tree?','Perform in-order traversal and find the middle element','Perform pre-order traversal and find the middle element','Perform level-order traversal and find the middle element','Median cannot be determined in a BST',1,'An in-order traversal provides elements in sorted order, allowing efficient median calculation.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(309,2,2,1,'What is the maximum number of nodes in a Binary Search Tree of height h?','2^h - 1','2^(h+1) - 1','h^2','h',2,'The maximum nodes in a BST of height h is 2^(h+1) - 1.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(310,2,3,1,'Which traversal can be used to duplicate a Binary Search Tree?','Pre-order traversal','In-order traversal','Post-order traversal','Any traversal',4,'Any traversal can be used to duplicate a BST if used properly.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(311,2,3,1,'What is the complexity of checking if two Binary Search Trees have the same structure?','O(n)','O(log n)','O(n^2)','O(1)',1,'To compare the structure, all nodes need to be visited, leading to O(n) complexity.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(312,2,2,1,'In which case does a Binary Search Tree degrade into a linked list?','When inserted in sorted order','When deleted in sorted order','When inserted in random order','When all nodes have the same value',1,'A BST degrades into a linked list when elements are inserted in sorted order.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(313,2,3,1,'What is the height of a skewed Binary Search Tree with n nodes?','n','log n','n/2','1',1,'In a skewed BST, the height equals the number of nodes (n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(314,2,3,1,'Which property of Red-Black Trees helps in maintaining balance?','Every path from the root to a leaf contains the same number of black nodes','Nodes are always inserted as black','Height difference is limited to 1','All leaf nodes are black',1,'The property of having equal black nodes in all paths ensures balance in Red-Black Trees.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(315,2,3,1,'Which rotation is required in an AVL tree for a left-right imbalance?','Left Rotation followed by Right Rotation','Right Rotation followed by Left Rotation','Only Left Rotation','Only Right Rotation',1,'Left-Right imbalance in AVL tree requires a Left Rotation followed by a Right Rotation.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(316,2,2,1,'What is the property of the root in a Binary Search Tree?','It is the largest node in the tree','It is the smallest node in the tree','It has no parent','It has at least one child',3,'The root node is the only node without a parent in a BST.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(317,2,3,1,'How do AVL trees ensure height balance?','By maintaining the balance factor of each node between -1 and 1','By performing rotations every time a node is inserted','By ensuring all paths have the same number of nodes','By allowing duplicate keys',1,'AVL trees use the balance factor property to maintain height balance.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(318,2,2,1,'How is the depth of a node in a Binary Search Tree defined?','The number of edges from the root to the node','The number of edges from the node to a leaf','The number of children of the node','The total number of nodes in the subtree rooted at the node',1,'Depth is the number of edges from the root to the node.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(319,2,3,1,'What is the total number of unique Binary Search Trees for 4 keys?','5','12','14','42',3,'Using Catalan numbers, the total unique BSTs for 4 keys is 14.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(320,2,3,1,'How do you handle duplicate keys in a Binary Search Tree?','Store them in the left subtree','Store them in the right subtree','Ignore them or store based on implementation','Replace the existing node',3,'Handling duplicates depends on the BST implementation, typically ignored or stored in a specific subtree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(321,2,3,1,'What is the space complexity of a recursive traversal of a Binary Search Tree?','O(h)','O(n)','O(1)','O(log n)',1,'The space complexity of a recursive traversal depends on the height of the tree, O(h).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(322,2,4,1,'Which data structure can be used to convert a BST into a balanced BST?','Queue','Stack','Array','Heap',3,'An array is typically used by storing the elements in sorted order via in-order traversal and reconstructing the tree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(323,2,3,1,'How is the balance factor of a node in an AVL tree calculated?','Height of left subtree - height of right subtree','Height of right subtree - height of left subtree','Sum of left and right subtree heights','Absolute difference of subtree heights',1,'The balance factor in an AVL tree is calculated as height(left subtree) - height(right subtree).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(324,2,2,1,'How is the deletion of a node handled in a Binary Search Tree?','Replace with in-order successor or predecessor','Always replace with the root','Delete directly without replacement','Set the node value to NULL',1,'The standard way to delete a node is to replace it with its in-order successor or predecessor.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(325,2,4,1,'What is the time complexity of merging two Binary Search Trees?','O(m + n)','O(log m + log n)','O(m*n)','O(max(m, n))',1,'Merging two BSTs involves traversing and merging their elements, which is O(m + n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(326,2,4,1,'Which BST operation is used frequently in range queries?','In-order traversal','Level-order traversal','Pre-order traversal','Post-order traversal',1,'In-order traversal is used to process nodes in sorted order, suitable for range queries.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(327,2,4,1,'What happens when a node with two children is deleted in a Binary Search Tree?','Replace it with its in-order successor or predecessor','Remove both children','Replace it with the root','Do nothing',1,'Nodes with two children are replaced with their in-order successor or predecessor during deletion.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(328,2,3,1,'What is the complexity of constructing a Binary Search Tree from a sorted array?','O(n)','O(n log n)','O(log n)','O(1)',1,'Constructing a BST from a sorted array in a balanced manner is O(n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(329,2,3,1,'Which operation is the most efficient for finding the predecessor of a node in a Binary Search Tree?','In-order traversal','Find the maximum node in the left subtree','Perform a reverse in-order traversal','Search for the node in the left subtree',2,'The predecessor of a node is the maximum value node in its left subtree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(330,2,2,1,'What does a binary search tree guarantee for any node with respect to its left and right children?','Left child values are greater','Right child values are smaller','Left child values are smaller','Right child values are greater',3,'In a BST, the left child values are smaller than the node, and the right child values are greater.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(331,2,3,1,'In an AVL tree, which type of imbalance requires a double rotation?','Left-Right imbalance','Right-Left imbalance','Left-Left imbalance','Right-Right imbalance',1,'Left-Right imbalances in AVL trees require a left rotation followed by a right rotation to balance the tree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(332,2,2,1,'Which of the following can lead to a degenerate Binary Search Tree?','Inserting sorted elements','Inserting random elements','Inserting duplicate values','Inserting elements with the same value',1,'Inserting sorted elements into a BST can result in a degenerate tree (similar to a linked list).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(333,2,3,1,'In a Red-Black Tree, which property ensures that the tree remains balanced?','Every path from a node to its descendant leaves has the same number of black nodes','The tree is always perfectly balanced','Nodes can have at most one child','Each node has at most two children',1,'This property helps maintain balance in a Red-Black Tree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(334,2,2,1,'What is the worst-case time complexity for a search operation in a Binary Search Tree?','O(n)','O(log n)','O(n log n)','O(1)',1,'In the worst case, the tree can become a linked list, leading to a search complexity of O(n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(335,2,4,1,'How can we perform a k-th largest element query in a Binary Search Tree?','Perform a reverse in-order traversal and stop at the kth node','Perform a normal in-order traversal and stop at the kth node','Search the tree iteratively for the kth largest element','Use level-order traversal and count elements until k',1,'By performing a reverse in-order traversal, we can find the k-th largest element in a BST.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(336,2,3,1,'What is the time complexity of deleting the root node in a Binary Search Tree?','O(n)','O(log n)','O(log n + h)','O(n log n)',1,'Deleting the root node involves finding its successor or predecessor, leading to a time complexity of O(n) in the worst case.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(337,2,2,1,'What is a key difference between a Binary Search Tree and a Binary Heap?','A Binary Search Tree maintains sorted order, while a Binary Heap does not','A Binary Heap maintains sorted order, while a Binary Search Tree does not','A Binary Heap has more efficient search operations than a Binary Search Tree','A Binary Heap allows duplicate values, while a Binary Search Tree does not',1,'The main difference is that a Binary Search Tree maintains sorted order of elements, while a Binary Heap follows a heap property.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(338,2,2,1,'What is the result of performing a pre-order traversal on a Binary Search Tree?','Sorted elements','Reverse sorted elements','Elements in the order they were inserted','Unsorted elements',4,'A pre-order traversal visits the root first, then recursively visits the left and right children, so it does not return sorted elements.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(339,2,3,1,'Which of the following is a characteristic of a Red-Black Tree?','The root node is always red','There is at least one path from the root to a leaf with an even number of black nodes','Every node is either red or green','The root node is always black',4,'The root node in a Red-Black Tree is always black.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(340,2,4,1,'How would you find the lowest common ancestor (LCA) of two nodes in a Binary Search Tree?','Traverse the tree from the root to both nodes and compare','Find the node with the highest value smaller than both nodes','Start from one node and move upward until a common ancestor is found','Find the first node that is between the two nodes in the BST',4,'The LCA is the first node encountered while traversing down from the root that lies between the two nodes.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(341,2,3,1,'How does the structure of a Binary Search Tree affect the performance of its operations?','A well-balanced BST has O(log n) performance for most operations','An unbalanced BST can have O(n) performance for most operations','A well-balanced BST has O(n) performance for most operations','The structure does not affect the performance of operations',1,'A balanced BST allows for O(log n) time complexity for search, insert, and delete operations.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(342,2,3,1,'In a Binary Search Tree, how is the in-order traversal order of nodes related to the key values?','It is in descending order','It is in ascending order','It is in the order the nodes were inserted','It is random',2,'In-order traversal of a BST gives the nodes in ascending order of their key values.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(343,2,4,1,'Which of the following is true about the space complexity of a recursive depth-first search in a Binary Search Tree?','It is O(n), where n is the number of nodes','It is O(log n), where n is the number of nodes','It is O(1)','It depends on the type of traversal',1,'The space complexity of a recursive depth-first search is O(n), since the call stack stores function calls.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(344,2,2,1,'What type of tree balancing is used by Red-Black Trees?','Color balancing','Rotational balancing','Height balancing','Node count balancing',1,'Red-Black trees maintain balance by adjusting the colors of nodes, along with rotations when necessary.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(345,2,2,1,'What is the worst-case height of a Binary Search Tree if elements are inserted in random order?','O(log n)','O(n)','O(n log n)','O(log n^2)',1,'In the worst case, a BST may become a linear structure (a linked list), resulting in a height of O(n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(346,2,3,1,'How does a Red-Black Tree differ from an AVL tree in terms of balancing?','Red-Black trees are less strictly balanced than AVL trees','Red-Black trees require more rotations for balancing','AVL trees allow duplicate keys while Red-Black trees do not','Red-Black trees are faster for deletions',1,'Red-Black trees are less strict about balancing compared to AVL trees, leading to fewer rotations and simpler implementation.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(347,2,2,1,'How do Binary Search Trees handle duplicate keys?','They store duplicates in the right subtree','They store duplicates in the left subtree','They do not allow duplicates','They store duplicates in a separate tree structure',1,'BSTs typically store duplicates in the right subtree (or left depending on implementation).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(348,2,3,1,'How would you find the predecessor of a node in a Binary Search Tree?','Find the maximum node in the left subtree of the node','Find the minimum node in the right subtree of the node','Search the tree for the node with a value smaller than the given node','Perform an in-order traversal from the node',1,'The predecessor of a node is the maximum value node in its left subtree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(349,2,4,1,'In the context of a Binary Search Tree, what is the in-order successor of a node?','The node with the smallest value larger than the current node','The node with the largest value smaller than the current node','The nodeâ€™s parent','The node with the smallest value in the tree',1,'The in-order successor of a node is the node with the smallest value greater than the current node.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(350,2,4,1,'Which traversal method is typically used to delete a node in a Binary Search Tree?','In-order traversal','Pre-order traversal','Post-order traversal','Level-order traversal',3,'In post-order traversal, nodes are visited after their children, making it easy to delete nodes safely in a BST.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(351,2,2,1,'How do you find the height of a Binary Search Tree?','The number of edges on the longest path from the root to a leaf','The number of nodes on the longest path from the root to a leaf','The number of levels in the tree','The number of nodes in the tree',1,'The height of a BST is defined as the number of edges on the longest path from the root to any leaf node.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(352,2,2,1,'What is the worst-case time complexity of inserting a new node into a Binary Search Tree?','O(n)','O(log n)','O(log n + n)','O(n^2)',1,'In the worst case, the tree is unbalanced, and insertion takes O(n) time.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(353,2,2,1,'What is the worst-case time complexity for searching for an element in a Binary Search Tree?','O(n)','O(log n)','O(log n + n)','O(1)',1,'In the worst case, the BST is unbalanced, and searching takes O(n) time.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(354,2,2,1,'Which of the following traversal methods guarantees nodes are visited in sorted order in a Binary Search Tree?','In-order traversal','Pre-order traversal','Post-order traversal','Level-order traversal',1,'In-order traversal visits the nodes of a BST in sorted order.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(355,2,2,1,'Which of the following is the correct property of a Binary Search Tree?','Left child values are smaller than the parent','Left child values are greater than the parent','Right child values are equal to the parent','Right child values are smaller than the parent',1,'In a Binary Search Tree, left child values are always smaller than the parent.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(356,2,3,1,'In an AVL tree, after a node is inserted, what condition must be checked to ensure the tree remains balanced?','The balance factor of every node must be between -1 and 1','The height of the tree must not exceed log(n)','The root node must remain balanced','The left subtree must always be taller than the right subtree',1,'The balance factor must be between -1 and 1 for the tree to remain balanced in an AVL tree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(357,2,3,1,'What is the maximum height of a perfectly balanced Binary Search Tree with n nodes?','O(log n)','O(n)','O(n log n)','O(n^2)',1,'The height of a perfectly balanced BST is O(log n), where n is the number of nodes.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(358,2,2,1,'In a Binary Search Tree, what happens when a node with no children is deleted?','The node is simply removed','The parent node is updated','The node is replaced by its parent','The tree is rebalanced',1,'A node with no children is simply removed from the tree when deleted.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(359,2,3,1,'How do you find the successor of a node in a Binary Search Tree?','Find the minimum value in the right subtree of the node','Find the maximum value in the left subtree of the node','Move up the tree and find the first node that is larger than the given node','Perform an in-order traversal starting from the node',1,'The successor of a node is the minimum node in its right subtree.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(360,2,3,1,'In a Red-Black Tree, which of the following is true regarding the color of a root node?','The root node is always black','The root node is always red','The root node can be either red or black','The root node has no color',1,'In a Red-Black Tree, the root node is always black.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(361,2,4,1,'What is the time complexity of deleting the root node in an AVL tree?','O(log n)','O(n)','O(log n + h)','O(n log n)',1,'In an AVL tree, the deletion of the root node requires rebalancing and is done in O(log n) time.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(362,2,4,1,'How do you handle a deletion in a Red-Black Tree?','Recolor nodes and perform rotations if necessary','Perform an in-order traversal and delete','Replace the deleted node with the root','Remove the node and adjust only the balance factor',1,'Red-Black Tree deletions require recoloring and performing rotations to maintain balance.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(363,2,3,1,'What is the primary difference between an AVL Tree and a Red-Black Tree?','AVL trees enforce stricter balance conditions than Red-Black trees','Red-Black trees allow more duplicate keys than AVL trees','Red-Black trees are faster for insertion','AVL trees perform better for range queries',1,'AVL trees have stricter balance conditions, making them more rigid in terms of balance compared to Red-Black trees.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(364,2,3,1,'Which of the following is true regarding the balance factor of a node in an AVL tree?','It is the difference between the heights of the left and right subtrees','It is always 0','It is always greater than or equal to 1','It is the number of child nodes',1,'The balance factor is the difference between the heights of the left and right subtrees and should be between -1 and 1 for balance.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(365,2,3,1,'What is the time complexity of finding the lowest common ancestor (LCA) of two nodes in a Binary Search Tree?','O(n)','O(log n)','O(n log n)','O(1)',2,'Finding the LCA in a BST requires O(log n) time if the tree is balanced, but it can be O(n) in the worst case.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(366,2,3,1,'What happens if the root node in a Binary Search Tree is deleted?','The tree is rebalanced','The root is replaced by its in-order successor or predecessor','The tree becomes unbalanced and needs reconstruction','The root node is removed and no replacement is needed',2,'When the root node is deleted, it is typically replaced by its in-order successor or predecessor.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(367,2,2,1,'What is the result of performing a post-order traversal on a Binary Search Tree?','Nodes are visited in reverse order of insertion','Nodes are visited in ascending order of values','Nodes are visited in descending order of values','Nodes are visited after their subtrees',4,'Post-order traversal visits nodes after their children, meaning the node itself is visited last.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(368,2,3,1,'How would you implement a Binary Search Tree that allows duplicate values?','Store duplicates in the right subtree','Store duplicates in the left subtree','Store duplicates in a separate linked list','Duplicate values are not allowed in a BST',1,'Duplicates can be stored in the right subtree of a BST.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(369,2,2,1,'What is the time complexity of performing an in-order traversal of a Binary Search Tree?','O(n)','O(log n)','O(n log n)','O(1)',1,'In-order traversal of a BST visits all n nodes, resulting in O(n) time complexity.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(370,2,4,1,'How does a Red-Black Tree maintain its balance after a deletion?','It uses rotations and recoloring to maintain balance','It rebalances itself only after every 10th deletion','It performs a left-right rotation after each deletion','It performs an in-order traversal to rebalance the tree',1,'After deletion, Red-Black Trees perform rotations and recoloring to maintain the balancing properties.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(371,2,4,1,'How can the height of a Binary Search Tree be optimized during insertions?','By ensuring balanced insertions','By inserting nodes at random locations','By deleting nodes after insertion','By always inserting into the left child first',1,'The height of a BST can be optimized by keeping it balanced during insertions, such as using AVL or Red-Black Trees.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(372,2,2,1,'What is the time complexity of performing a level-order traversal on a Binary Search Tree?','O(n)','O(log n)','O(n^2)','O(1)',1,'Level-order traversal visits all nodes and thus has a time complexity of O(n).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(373,2,2,1,'What property distinguishes a Binary Search Tree from a Binary Heap?','A Binary Search Tree is sorted, while a Binary Heap follows a heap property','A Binary Heap stores only integers','A Binary Heap allows random insertion of elements','A Binary Search Tree has a fixed height',1,'A Binary Search Tree maintains a sorted structure, while a Binary Heap follows a heap property (max or min heap).','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(374,2,2,1,'How do you find the maximum value in a Binary Search Tree?','By traversing the rightmost path from the root','By performing an in-order traversal and picking the last element','By traversing the leftmost path from the root','By finding the first leaf node',1,'In a Binary Search Tree, the maximum value is always at the rightmost node.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(375,2,3,1,'In which scenario can a Binary Search Tree become unbalanced?','When elements are inserted in sorted order','When elements are inserted in random order','When duplicate values are inserted','When nodes are deleted in random order',1,'Inserting elements in sorted order can lead to an unbalanced BST, essentially forming a linked list.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(376,3,1,1,'What is the default file extension for an Excel workbook?','.xls','.xlsx','.csv','.docx',2,'The default file extension for an Excel workbook is .xlsx.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(377,3,1,1,'Which function is used to find the average of a range in Excel?','SUM()','AVERAGE()','COUNT()','MEDIAN()',2,'The AVERAGE() function is used to calculate the average of a range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(378,3,1,1,'How can you quickly select an entire column in Excel?','Press Ctrl + A','Click the column header','Double-click the cell','Press Ctrl + C',2,'Clicking the column header selects the entire column.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(379,3,1,1,'Which feature allows you to combine two or more cells into one in Excel?','Merge & Center','Wrap Text','Align Left','Split Cells',1,'The Merge & Center option combines two or more cells into one.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(380,3,1,1,'What is the shortcut key to save a workbook in Excel?','Ctrl + S','Ctrl + P','Ctrl + Z','Ctrl + X',1,'Ctrl + S saves the workbook.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(381,3,2,1,'Which function is used to return the current date and time in Excel?','TODAY()','NOW()','DATE()','TIME()',2,'The NOW() function returns the current date and time.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(382,3,2,1,'What is the keyboard shortcut to insert a new worksheet in Excel?','Shift + F11','Ctrl + F11','Alt + F11','Ctrl + Shift + F11',1,'Shift + F11 inserts a new worksheet.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(383,3,2,1,'Which chart type is best for showing trends over time?','Pie Chart','Line Chart','Bar Chart','Scatter Chart',2,'Line charts are best for showing trends over time.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(384,3,3,1,'What is the maximum number of rows in an Excel worksheet (latest version)?','65,536','1,048,576','2,048,576','Unlimited',2,'Excel worksheets have a maximum of 1,048,576 rows.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(385,3,3,1,'Which Excel function is used to count the number of numeric values in a range?','COUNTA()','COUNTIF()','COUNT()','SUM()',3,'The COUNT() function counts the number of numeric values in a range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(386,3,3,1,'What does the VLOOKUP function do in Excel?','Filters data','Searches vertically in a range','Adds values','Formats text',2,'VLOOKUP searches for a value in the first column of a range and returns a value in the same row from another column.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(387,3,3,1,'Which Excel feature allows you to protect cells from being edited?','Data Validation','Freeze Panes','Cell Locking','Conditional Formatting',3,'Cell Locking protects cells from being edited when the sheet is protected.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(388,3,4,1,'What is the purpose of the PivotTable feature in Excel?','To create charts','To summarize and analyze data','To format cells','To find duplicates',2,'PivotTables help summarize and analyze large datasets.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(389,3,4,1,'How can you remove duplicates from a dataset in Excel?','Use the Filter function','Use the Remove Duplicates tool','Manually delete rows','Use the Sort tool',2,'The Remove Duplicates tool removes duplicate entries from a dataset.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(390,3,4,1,'Which function is used to calculate monthly loan payments in Excel?','PMT()','EMI()','LOAN()','PAY()',1,'The PMT() function calculates loan payments.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(391,3,4,1,'What is the purpose of the CONCATENATE function in Excel?','To add numbers','To merge text strings','To format dates','To sort data',2,'The CONCATENATE function merges text strings from different cells.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(392,3,4,1,'How can you apply conditional formatting in Excel?','By using formulas','By selecting rules in the Conditional Formatting menu','Both a and b','It cannot be done',3,'Conditional formatting can be applied using rules or formulas.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(393,3,4,1,'What does the INDEX function do in Excel?','Returns the position of a value','Returns a value from a specific position in a range','Adds values','Formats text',2,'The INDEX function returns a value from a specific position in a range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(394,3,4,1,'Which function is used to find errors in a formula in Excel?','ERROR()','IFERROR()','FIND()','SEARCH()',2,'IFERROR() handles and finds errors in formulas.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(395,3,4,1,'How can you split text into columns in Excel?','Using Data Validation','Using Text to Columns','Using Split Tool','Using AutoFill',2,'Text to Columns splits text into different columns.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(396,3,1,1,'Which symbol is used in Excel to begin a formula?','=','+','-','@',1,'Formulas in Excel always start with the \"=\" symbol.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(397,3,1,1,'What is the function of the SUM() formula in Excel?','It counts cells.','It adds values in a range.','It finds the average.','It multiplies numbers.',2,'The SUM() function adds values in a selected range of cells.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(398,3,1,1,'Which tool can be used to adjust the width of a column automatically to fit its content?','Wrap Text','AutoFit','Merge & Center','Freeze Panes',2,'The AutoFit tool adjusts the width of a column to fit its content.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(399,3,2,1,'What is the shortcut key to open the Find and Replace dialog box in Excel?','Ctrl + R','Ctrl + H','Ctrl + F','Alt + F4',3,'Ctrl + F opens the Find and Replace dialog box.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(400,3,2,1,'Which Excel feature freezes specific rows or columns to remain visible while scrolling?','Data Validation','Freeze Panes','Split Screen','Conditional Formatting',2,'Freeze Panes keeps selected rows or columns visible while scrolling.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(401,3,2,1,'What does the COUNTIF() function do in Excel?','Counts all cells in a range.','Counts cells meeting a specific condition.','Counts blank cells.','Counts numeric cells only.',2,'The COUNTIF() function counts cells that meet a specific condition.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(402,3,2,1,'Which type of chart is best for comparing parts of a whole?','Line Chart','Pie Chart','Bar Chart','Scatter Chart',2,'Pie charts are best for comparing parts of a whole.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(403,3,3,1,'How do you apply a filter to a range of data in Excel?','Go to the Data tab and select Filter.','Use the Sort tool.','Apply Conditional Formatting.','Use the PivotTable tool.',1,'Filters are applied from the Data tab using the Filter option.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(404,3,3,1,'Which error occurs when a formula refers to a cell that no longer exists?','#VALUE!','#NAME?','#REF!','#DIV/0!',3,'The #REF! error occurs when a formula references a deleted cell or range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(405,3,3,1,'What does the TRIM() function do in Excel?','Removes all spaces from a text.','Removes extra spaces from text.','Formats numbers.','Converts text to uppercase.',2,'The TRIM() function removes extra spaces except single spaces between words.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(406,3,3,1,'What is the shortcut to create a new workbook in Excel?','Ctrl + N','Ctrl + W','Ctrl + O','Ctrl + T',1,'Ctrl + N creates a new workbook in Excel.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(407,3,3,1,'Which function is used to look up values in a horizontal range?','VLOOKUP()','HLOOKUP()','INDEX()','MATCH()',2,'The HLOOKUP() function looks up values in a horizontal range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(408,3,3,1,'What is the purpose of the IF function in Excel?','To check for errors.','To create logical comparisons.','To format text.','To calculate totals.',2,'The IF function performs logical comparisons and returns different values based on conditions.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(409,3,4,1,'What is a sparkline in Excel?','A mini-chart displayed within a single cell.','A tool to filter data.','A new workbook.','A type of macro.',1,'A sparkline is a mini-chart displayed within a single cell to show trends.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(410,3,4,1,'Which function is used to extract a specific number of characters from the left of a text string?','RIGHT()','LEFT()','MID()','LEN()',2,'The LEFT() function extracts a specific number of characters from the left of a text string.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(411,3,4,1,'How can you create a named range in Excel?','By selecting a range and typing a name in the Name Box.','By using Data Validation.','By creating a chart.','By using the Sort tool.',1,'Named ranges are created by selecting a range and typing a name in the Name Box.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(412,3,4,1,'What does the MATCH() function do in Excel?','Returns the position of a value in a range.','Finds and replaces text.','Adds two numbers.','Sorts data.',1,'The MATCH() function returns the position of a value within a range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(413,3,4,1,'Which function calculates the smallest value in a range?','MAX()','MIN()','SMALL()','AVERAGE()',2,'The MIN() function calculates the smallest value in a range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(414,3,4,1,'What does the INDIRECT() function do in Excel?','Returns the value of a cell reference.','Converts text to a number.','Filters a range of data.','Splits text into columns.',1,'The INDIRECT() function returns the value of a cell reference as specified by text.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(415,3,4,1,'Which function is used to rank a number within a list in Excel?','RANK()','SORT()','MATCH()','VLOOKUP()',1,'The RANK() function assigns a rank to a number in a list.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(416,3,1,1,'Which function would you use to round a number to the nearest integer in Excel?','ROUND()','TRUNC()','INT()','MOD()',1,'The ROUND() function is used to round a number to the nearest integer or specified decimal places.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(417,3,1,1,'What does the Fill Handle in Excel allow you to do?','Copy cell contents.','Create series.','Both a and b.','None of the above.',3,'The Fill Handle allows you to copy cell contents or create a series.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(418,3,1,1,'Which of the following is not a valid Excel chart type?','Bar Chart','Line Chart','Pie Chart','Text Chart',4,'Text Chart is not a valid chart type in Excel.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(419,3,1,1,'Which tab contains the \"Sort & Filter\" option in Excel?','File','Data','Insert','Review',2,'The \"Sort & Filter\" option is located in the Data tab.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(420,3,2,1,'What is the purpose of the Data Validation feature in Excel?','To lock cells.','To restrict data entry.','To format data.','To split text.',2,'Data Validation is used to restrict data entry based on rules.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(421,3,2,1,'What is the result of =LEN(\"Excel\") in Excel?','4','5','6','Error',2,'The LEN() function returns the number of characters in a string, including spaces.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(422,3,2,1,'Which Excel tool lets you combine data from multiple worksheets?','Consolidate','Data Validation','Remove Duplicates','Conditional Formatting',1,'The Consolidate tool combines data from multiple worksheets or ranges.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(423,3,2,1,'Which error appears when you divide a number by zero in Excel?','#VALUE!','#REF!','#DIV/0!','#NAME?',3,'The #DIV/0! error occurs when dividing by zero or an empty cell.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(424,3,2,1,'What is the shortcut to apply a filter to a range of data in Excel?','Ctrl + Shift + F','Ctrl + T','Alt + D + F + F','Alt + F5',3,'Alt + D + F + F is the shortcut to apply a filter in Excel.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(425,3,3,1,'What is the maximum number of columns in an Excel worksheet (latest version)?','256','512','16,384','1,048,576',3,'Excel has a maximum of 16,384 columns in the latest version.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(426,3,3,1,'Which function is used to return the largest value in a range?','LARGE()','MAX()','SUM()','COUNT()',2,'The MAX() function returns the largest value in a range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(427,3,3,1,'What does the MID() function do in Excel?','Extracts a substring from a text.','Finds the middle value.','Rounds numbers to the middle.','Splits text into multiple columns.',1,'The MID() function extracts a substring starting at a specific position.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(428,3,3,1,'Which shortcut key opens the Format Cells dialog box in Excel?','Ctrl + 1','Ctrl + 2','Ctrl + 3','Ctrl + 4',1,'Ctrl + 1 opens the Format Cells dialog box.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(429,3,4,1,'Which chart is best for showing relationships between variables?','Pie Chart','Bar Chart','Line Chart','Scatter Plot',4,'Scatter plots are used to show relationships between variables.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(430,3,4,1,'What does the PROPER() function do in Excel?','Converts text to lowercase.','Converts text to uppercase.','Capitalizes the first letter of each word.','Formats text.',3,'The PROPER() function capitalizes the first letter of each word in a string.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(431,3,4,1,'Which Excel tool allows you to summarize large datasets dynamically?','Sort','Filter','PivotTable','Conditional Formatting',3,'PivotTables are used to summarize large datasets dynamically.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(432,3,4,1,'What does the CONCAT() function do in Excel?','Concatenates numbers.','Joins text strings.','Converts text to numbers.','Filters data.',2,'The CONCAT() function joins text strings from multiple cells or ranges.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(433,3,4,1,'How can you display formulas instead of results in an Excel sheet?','Press Ctrl + R.','Use Formula View.','Press Ctrl + `.','Enable Macro View.',3,'Press Ctrl + ` to toggle the display of formulas in a worksheet.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(434,3,4,1,'What does the LARGE() function do in Excel?','Finds the largest value in a range.','Returns the nth largest value in a range.','Counts large numbers.','Sorts data by size.',2,'The LARGE() function returns the nth largest value in a range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(435,3,4,1,'Which function is used to calculate the standard deviation of a range in Excel?','VAR()','STDEV()','AVERAGE()','COUNT()',2,'The STDEV() function calculates the standard deviation of a range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(436,3,1,1,'How can you find the sum of a range of cells in Excel?','Use the SUM() function.','Use the AVERAGE() function.','Use the COUNT() function.','Use the MAX() function.',1,'The SUM() function adds up the values in a range of cells.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(437,3,1,1,'What is the function used to calculate the square root of a number in Excel?','SQRT()','POWER()','ROOT()','EXP()',1,'The SQRT() function calculates the square root of a number.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(438,3,2,1,'Which tool allows you to protect an Excel worksheet from editing?','Freeze Panes','Data Validation','Protect Sheet','Conditional Formatting',3,'The Protect Sheet tool prevents unauthorized changes to a worksheet.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(439,3,2,1,'What does the COUNT() function do in Excel?','Counts the number of cells with numbers.','Counts all non-empty cells.','Counts the number of empty cells.','Counts the number of blank cells.',1,'The COUNT() function counts the number of cells that contain numeric values in a range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(440,3,2,1,'What happens when you click on a cell reference in a formula in Excel?','It highlights the entire worksheet.','It updates the formula automatically.','It highlights the referenced cell.','It adds an absolute reference to the cell.',3,'Clicking on a cell reference in a formula highlights the referenced cell.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(441,3,2,1,'What is the purpose of the Format Painter in Excel?','To copy cell content.','To copy cell formatting to another cell.','To merge cells.','To format numbers in cells.',2,'The Format Painter copies formatting from one cell to another.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(442,3,2,1,'Which of the following is NOT a valid Excel function?','SUM()','AVERAGE()','COUNTIF()','FILTER()',4,'FILTER() is not a valid function in older versions of Excel, though available in newer versions.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(443,3,3,1,'How can you quickly remove all formatting from a range of cells in Excel?','Clear All Formatting','Clear Contents','Clear Data','Reset Formatting',1,'The Clear All Formatting option removes all formatting from a selected range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(444,3,3,1,'What is the function of the TODAY() function in Excel?','Returns the current date and time.','Returns the current date.','Returns the number of days until today.','Returns a random number.',2,'The TODAY() function returns the current date without the time.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(445,3,3,1,'Which function can be used to convert a text value to a number in Excel?','TEXT()','VALUE()','NUMERIC()','CONVERT()',2,'The VALUE() function converts text values that represent numbers into actual numbers.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(446,3,3,1,'What does the OFFSET() function do in Excel?','Adds a specific value to a cell.','Changes the reference to a cell by a specified number of rows and columns.','Moves a cell to the top left corner.','Removes a specific value from a cell.',2,'The OFFSET() function shifts a reference by a given number of rows and columns.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(447,3,3,1,'What is the keyboard shortcut to toggle between showing formulas and values in Excel?','Ctrl + `','Ctrl + F','Alt + F1','Ctrl + F1',1,'Ctrl + ` toggles between showing formulas and the results in Excel.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(448,3,4,1,'How can you apply different formatting to alternate rows in Excel?','Use Conditional Formatting with a formula.','Manually format each row.','Use the Format Painter.','Apply a custom style.',1,'Conditional Formatting with a formula allows alternate rows to have different formats.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(449,3,4,1,'What is the maximum number of sheets allowed in an Excel workbook?','50','256','1,024','Unlimited',4,'There is no fixed limit for the number of sheets, but it depends on system memory.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(450,3,4,1,'Which of the following functions returns the number of characters in a string?','LEN()','LENGTH()','COUNT()','CHAR()',1,'The LEN() function returns the number of characters in a string.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(451,3,4,1,'What does the INDEX-MATCH combination do in Excel?','Finds the largest value in a range.','Returns the value of a cell at a specified row and column.','Combines two columns of text.','Counts non-empty cells in a range.',2,'The INDEX-MATCH combination returns a value based on row and column references.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(452,3,4,1,'What does the ISBLANK() function do in Excel?','Checks if a cell contains a number.','Checks if a cell contains a formula.','Checks if a cell is empty.','Checks if a cell contains text.',3,'The ISBLANK() function checks if a cell is empty.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(453,3,4,1,'What is the function used to calculate the sum of a range, excluding errors in Excel?','SUMIF()','SUMPRODUCT()','SUMERROR()','AGGREGATE()',4,'The AGGREGATE() function calculates the sum while ignoring errors.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(454,3,4,1,'Which function is used to count cells with text values in Excel?','COUNT()','COUNTA()','COUNTIF()','TEXTCOUNT()',2,'The COUNTA() function counts all non-empty cells, including those with text.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(455,3,4,1,'What does the \"Remove Duplicates\" feature do in Excel?','Removes blank cells.','Removes duplicate rows in a dataset.','Removes formatting.','Removes cell references.',2,'The \"Remove Duplicates\" feature removes duplicate entries from the selected range.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL),(456,3,4,1,'What is the purpose of the Flash Fill feature in Excel?','To fill cells with a pattern based on examples.','To automatically sum a range of numbers.','To remove duplicates from a list.','To highlight cells based on criteria.',1,'Flash Fill automatically fills data based on patterns identified in nearby cells.','2024-11-22 18:29:36','2024-11-22 18:29:36',NULL);

--
-- Table structure for table `subjects`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `subjects` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `subject_name` varchar(255) NOT NULL,
  `inforce` tinyint(1) NOT NULL DEFAULT 1,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `subject_name` (`subject_name`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `subjects`
--

INSERT INTO `subjects` (`id`, `subject_name`, `inforce`, `created_at`, `updated_at`) VALUES (1,'Data Structure And Algorithm',1,'2024-11-22 18:29:35','2024-11-22 18:29:35'),(2,'Microsoft Excel',1,'2024-11-22 18:29:36','2024-11-22 18:29:36');

--
-- Table structure for table `topics`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `topics` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `subject_id` bigint(20) unsigned DEFAULT NULL,
  `topic_name` varchar(255) NOT NULL,
  `inforce` tinyint(1) NOT NULL DEFAULT 1,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_subject_id_topic_name` (`subject_id`,`topic_name`),
  KEY `subject_id` (`subject_id`),
  CONSTRAINT `topics_ibfk_1` FOREIGN KEY (`subject_id`) REFERENCES `subjects` (`id`) ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `topics`
--

INSERT INTO `topics` (`id`, `subject_id`, `topic_name`, `inforce`, `created_at`, `updated_at`) VALUES (1,1,'Link List',1,'2024-11-22 18:29:35','2024-11-22 18:29:35'),(2,1,'Binary Search Tree',1,'2024-11-22 18:29:36','2024-11-22 18:29:36'),(3,2,'Excel Basic',1,'2024-11-22 18:29:36','2024-11-22 18:29:36');

--
-- Table structure for table `user_types`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `user_types` (
  `id` bigint(20) unsigned NOT NULL,
  `user_type_name` varchar(255) NOT NULL,
  `inforce` tinyint(1) NOT NULL DEFAULT 1,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_user_type_name` (`user_type_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_types`
--

INSERT INTO `user_types` (`id`, `user_type_name`, `inforce`, `created_at`, `updated_at`) VALUES (1,'Admin',1,'2024-12-19 04:43:36','2024-12-19 04:43:36'),(2,'Instructor',1,'2024-12-19 04:43:59','2024-12-19 04:52:57'),(3,'Student',1,'2024-12-19 04:44:19','2024-12-19 04:44:19');

--
-- Table structure for table `users`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_type_id` bigint(20) unsigned DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `email` varchar(255) NOT NULL,
  `user_password` varchar(255) NOT NULL,
  `inforce` tinyint(1) NOT NULL DEFAULT 1,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_user_type_name` (`email`),
  KEY `user_type_id` (`user_type_id`),
  CONSTRAINT `users_ibfk_1` FOREIGN KEY (`user_type_id`) REFERENCES `user_types` (`id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `user_type_id`, `email`, `user_password`, `inforce`, `created_at`, `updated_at`) VALUES (1,1,'abhroniladas2004@gmail.com','1234',1,'2024-12-19 05:05:21','2024-12-19 05:05:21'),(2,2,'swadip@gmail.com','12345',1,'2024-12-19 05:07:43','2024-12-19 05:07:43');

--
-- Dumping routines for database 'mcq2_db'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-02-19 22:06:37
